<title>Run Production Reformats</title>

To reformat data in production mode, you'll need to customize its behavior by creating a PFF file. You can then use the PFF file as a command line parameter for CSReFmt.exe (the associated filename of this utility). For example, if you name your PFF file MyReFmt.pff, you can run CSReFmt by doing the following from the command prompt or a desktop icon:

<indent><font monospace>"C:\Program Files (x86)\CSPro <definition version />\CSReFmt.exe" MyReFmt.pff</font></indent>

This assumes that CSPro was installed in the default directory. Your PFF file must have a .pff extension.

The PFF file is a text file so you can create and modify it using any text editor (such as Notepad or Wordpad). A PFF file is not case sensitive, so you can use any combination of upper and lower case text. Or, you can run CSReFmt once, and a PFF file will be automatically created for you—it will be named CSReFmt.pff, and will be placed in the same folder as your input dictionary. You can also manipulate PFF files in logic by using the <link CSPro::pff.hgt>pff</link> object. The following is an example of a CSReFmt PFF file.

<pff>
[Run Information]
Version=CSPro <definition version />
AppType=Reformat

[Files]
InputData=.\MyInput.dat
OutputData=.\MyOutput.dat
Listing=.\CSReFmt.lst
InputDict=.\Input.dcf
OutputDict=.\Output.dcf

[Parameters]
ViewListing=Always
ViewResults=No
DisplayNames=Yes
</pff>

<subheader>[Run Information]</subheader>

The <pffcolor>[Run Information]</pffcolor> block is required and must appear exactly as shown in the example above.

<subheader>[Files]</subheader>

The <pffcolor>[Files]</pffcolor> block is required and defines all files that could be used in the reformat process.

<list>
	<li>At a minimum, the <pffcolor>Listing</pffcolor>=, <pffcolor>InputDict</pffcolor>=, and <pffcolor>OutputDict</pffcolor>= lines must be provided. If only these files are defined, then CSReFmt will compare the dictionaries and report what fields will be dropped, added, resized, or otherwise modified if the reformat were to occur. If the <pffcolor>InputData</pffcolor> and <pffcolor>OutputData</pffcolor> files are defined, then the reformat operation will actually take place.</li>
	<li><pffcolor>InputData</pffcolor> is the data file to reformat from, and <pffcolor>OutputData</pffcolor> is the reformatted data file.</li>
	<li>By default, the listing file will be placed to the same folder as the <pffcolor>OutputData</pffcolor> file.</li>
</list>

If <pffcolor>InputData</pffcolor> points to a data source with an embedded dictionary, then <pffcolor>InputDict</pffcolor> does not need to be specified.

<subheader>[Parameters]</subheader>

The <pffcolor>[Parameters]</pffcolor> block is optional.

<list>
	<li><pffcolor>ViewListing</pffcolor>= determines whether or not the report on the reformat operation is displayed with TextViewer at the end of the run. The report only indicates what fields were dropped, modified, etc., it does not actually show you the newly reformatted data file. If <pffcolor>ViewListing</pffcolor>=Never, then the report is not displayed. If <pffcolor>ViewListing</pffcolor>=OnError, then you will only see the report if any error occurred during the compilation of the report. If <pffcolor>ViewListing</pffcolor>=Always, then the results will always be shown. If the line is missing the listing will be displayed by default.</li>
	<li><pffcolor>ViewResults</pffcolor>= determines whether you view the newly reformatted data file. Available options are "Yes" and "No." If the PFF file was automatically generated, this entry will default to "No." If the line is missing the results will not be shown.</li>
	<li><pffcolor>DisplayNames</pffcolor>= determines whether or show names or labels in the listing file. Available options are "Yes" (names) and "No" (labels).</li>
</list>

<title>Run Production Data Entry</title>

You can customize CSEntry's behavior by creating a <link program_information_file_pff.hgt>PFF file</link>. You can then use the PFF file as a command line parameter for CSEntry.exe. For example, if you name your PFF file MySurvey.pff, then you run the data entry application by invoking:

<indent><font monospace>"C:\Program Files (x86)\CSPro <definition version />\CSEntry.exe" MySurvey.pff</font></indent>

This assumes that CSPro was installed in the default directory. Your PFF file must have a .pff extension.

You can create a PFF file in one of two ways: either [1] create one with a text editor (such as Notepad or Wordpad), or [2] have it generated automatically for you by launching your data entry application from within the CSPro Designer. The file will have the same name as your application, but with a .pff extension instead of .ent. For example, if your data entry application was named MySurvey.ent, the generated PFF would be named MySurvey.pff.

The following section shows the options available to you in a CSEntry PFF file. A PFF file is not case sensitive, so you can use any combination of upper and lower case text.

<pff>
[Run Information]
Version=CSPro <definition version />
AppType=Entry
Description=My Survey

[DataEntryInit]
OperatorID=John
Key=1250
StartMode=Add
AutoAdd=Yes
FullScreen=No
NoFileOpen=No
Lock=Verify,Stats
Interactive=Ask
CaseListingFilter=12
ShowInApplicationListing=Always

[Files]
Application=.\MySurvey.ent
InputData=.\MyData.csdb
Paradata=.\MyParadataLog.cslog
CommonStore=.\MySettings.db
BaseMap=.\MyMap.mbtiles

[ExternalFiles]
LOOKUP_DICT=.\LookupFile.dat

[Parameters]
Parameter=your choice
Language=LINGALA
OnExit=.\Menu.pff

[DataEntryIDs]
PROVINCE=12
DISTRICT=05
</pff>


<subheader>[Run Information]</subheader>

The <pffcolor>[Run Information]</pffcolor> block is required. The <pffcolor>Version</pffcolor> and <pffcolor>AppType</pffcolor> and must appear exactly as shown in the example above. The <pffcolor>Description</pffcolor> is optional. If included, it will be used instead of the name of the file in the list of applications (mobile only) and in the window title during data entry (all platforms).


<subheader>[DataEntryInit]</subheader>

The <pffcolor>[DataEntryInit]</pffcolor> block is optional. It gives you the opportunity to customize the following runtime characteristics:

<list>
	<li><pffcolor>OperatorID</pffcolor>=specifies the <link getoperatorid_function.hgt>operator ID</link> for the purposes of logging <link operator_statistics_file_log.hgt>operator statistics</link>. If this line is not present but your data entry application has been set to <link change_data_entry_options.hgt>ask for this</link>, CSEntry will prompt the operator for one at runtime.</li>
	<li><pffcolor>StartMode</pffcolor>=determines the mode in which CSEntry starts. The possible options are: <b>Add</b>, <b>Modify</b>, and <b>Verify</b>. If this line is not present, one of two things will occur: if the data file does not exist, then the program will start in <b>Add</b> mode; if the data file does exist, then CSEntry will wait for the operator to choose their desired mode. The operator's choices may be constrained due to options indicated in the <pffcolor>Lock</pffcolor> feature.
	~!~You can also specify the case upon which to act by adding a semicolon and the case IDs of an existing case (for example: <pffcolor>StartMode</pffcolor>=<b>Modify</b>;010502). This will open CSEntry in <b>Modify</b> mode and open the case indicated by the ID. If the <pffcolor>StartMode</pffcolor> conflicts with the <pffcolor>Lock</pffcolor> parameter settings, then the <pffcolor>StartMode</pffcolor> parameter will take precedence.</li>
	<li><pffcolor>Key</pffcolor>= specifies the case ID to automatically open. If a key is provided that exists in the data file, CSEntry will open that case and then close once the case has been entered. If the case does not exist, a new case is created and the IDs automatically filled from the values specified. If only a partial key is provided, then only the values specified are prefilled. (For example, if the IDs are cluster and household number and the key only specifies the cluster, then the cluster will be automatically filled but the interviewer will have to specify the household number.) The <pffcolor>StartMode</pffcolor> attribute takes precedence over the <pffcolor>Key</pffcolor> attribute. You generally will use only one, if any, in your design. This attribute is typically used in menu programs, often with the output of the <logiccolor>key</logiccolor> logic function.</li>
	<li><pffcolor>AutoAdd</pffcolor>=indicates whether, while in <b>Add</b> mode, CSEntry should continuously add cases, meaning that after a case is added, CSEntry will begin adding another case. The possible options are: <b>Yes</b> (default) and <b>No</b>.</li>
	<li><pffcolor>FullScreen</pffcolor>=determines whether CSEntry will open the application in full screen mode, with no case tree on the left. The possible options are: <b>Yes</b>, <b>No</b> (default), and <b>NoMenus</b>. The parameter <b>NoMenus</b> will open CSEntry in a tablet-friendly mode whereby the case tree and the CSEntry menus and title bar are not shown.</li>
	<li><pffcolor>NoFileOpen</pffcolor>=determines whether CSEntry will permit the operator to open another data file while running a data entry application. The possible options are: <b>Yes</b> (default) and <b>No</b>.</li>
	<li><pffcolor>Lock</pffcolor>=indicates what CSEntry modes the operator cannot access. The possible options are:~!~~!~
		<list>
			<li><b>Add</b>: The operator cannot add new cases.</li>
			<li><b>Modify</b>: The operator cannot modify existing cases.</li>
			<li><b>Verify</b>: The operator cannot verify existing cases.</li>
			<li><b>Stats</b>: The operator cannot view <link operator_statistics_file_log.hgt>operator statistics</link>.</li>
			<li><b>Delete</b>: The operator cannot delete cases.</li>
			<li><b>CaseListing</b>: On mobile CSEntry, the Case Listing screen will be bypassed.</li>
		</list>
	Multiple modes can be specified by listing each mode, separated by a comma.
	</li>
	<li><pffcolor>Interactive</pffcolor>=specifies the default way that CSEntry runs in <link CSEntry::edit_interactively.hgt>Interactive Edit</link> mode. The possible options are:~!~~!~
		<list>
			<li><b>Ask</b>: The default option, CSEntry will ask the operator how to run Interactive Edit.</li>
			<li><b>Both</b>: CSEntry will display both out-of-range messages and errors generated from the <logiccolor>errmsg</logiccolor> function.</li>
			<li><b>ErrMsg</b>: CSEntry will only display errors generated from the <logiccolor>errmsg</logiccolor> function.</li>
			<li><b>Range</b>: CSEntry will only display out-of-range message.</li>
			<li><b>Off</b>: Interative Edit mode will be disabled.</li>
		</list>
	If the mode is followed by a comma and <b>Lock</b>, then the mode cannot be changed by the operator. Otherwise, unless the option is <b>Off</b>, the operator can change the mode from within CSEntry.
		</li>
	<li><pffcolor>CaseListingFilter</pffcolor>=filters the cases in the data file shown to the operator. The filter string can use regular expressions. If you have multiple operators entering data to the same data file, this can be a way to prevent operators from interacting with data entered by other operators. The filter is matched against the IDs of each case.</li>
	<li><pffcolor>ShowInApplicationListing</pffcolor>=determines whether the application associated with this PFF is displayed on the mobile Entry Applications screen. The possible options are: <b>Always</b> (default), <b>Never</b>, and <b>Hidden</b>. Operators must manually elect to show hidden applications, whereas PFFs with the <b>Never</b> option will never be shown.</li>
</list>


<subheader>[Files]</subheader>

The <pffcolor>[Files]</pffcolor> block is required. A description of the files, not all of which have to be specified, is as follows:

<list>
	<li><pffcolor>Application</pffcolor>=the name of the data entry application that you created.</li>
	<li><pffcolor>InputData</pffcolor>=the data file that an operator will be creating, modifying, or verifying with this data entry application.</li>
	<li><pffcolor>Paradata</pffcolor>=the name of a file where <link paradata.hgt>events</link> logged during the application's run are saved.</li>
	<li><pffcolor>CommonStore</pffcolor>=if you use the <logiccolor>loadsetting</logiccolor> or <logiccolor>savesetting</logiccolor> functions in your program, this file overrides the default location where these settings are saved.</li>
	<li><pffcolor>BaseMap</pffcolor>=if you use the map-based case listing this file provides an offline map that will be used as the base map instead of an online Google Map. MBTiles and ArcGIS Tile Package format files are supported. See <topic offline_maps.hgt /> for details. </li>
</list>


<subheader>[ExternalFiles]</subheader>

If the <pffcolor>[ExternalFiles]</pffcolor> block is present, it means that a second (or more) dictionary was linked to the data entry application. In the example above, LOOKUP_DICT is the dictionary name, and LookupFile.dat is the name of the data file that contains the <link lookup_files.hgt>lookup codes</link>.


<subheader>[Parameters]</subheader>

The <pffcolor>[Parameters]</pffcolor> block is optional. This section defines parameters for the data entry run.

<list>
 	<li><pffcolor>Parameter</pffcolor>=allows you to pass in a string to your program. The parameter can be any length, although the string that retrieves the value in your program (via the <logiccolor>sysparm</logiccolor> function) must be large enough to accommodate it. Once the parameter is retrieved, it can be parsed by your program for further usage.</li>
	<li><pffcolor>Language</pffcolor>=specifies the initial language of the program. The parameter must match the name of a language specified in the question text, dictionary, or message file.</li>
 	<li><pffcolor>OnExit</pffcolor>=specifies a PFF file to run after the data entry program closes. This can be useful, for example, if you want to relaunch a menu program after collecting data.</li>
</list>


<subheader>[DataEntryIDs]</subheader>

The <pffcolor>[DataEntryIDs]</pffcolor> block is for use with any <link change_field_properties.hgt>persistent IDs</link> that you have defined. CSEntry will assign the specified values to the indicated persistent fields when a new data file is created. This feature allows automatic definition of persistent fields, such as geographic IDs. If you provide values and run this on an existing data file, and the PFF file values do not match the values in the data file, then the PFF values will be ignored. The syntax is as follows:

<logicsyntax>
<arg>id_item_name</arg>=<arg>initial_value</arg>
</logicsyntax>

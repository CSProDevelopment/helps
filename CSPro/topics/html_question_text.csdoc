<title>HTML Question Text</title>

<subheader>Overview</subheader>

For those with experience using <link html_in_cspro.csdoc>HTML</link>, it is possible to format the question using HTML tags and CSS styles. To view the HTML code, click on the <b>Code</b> button on the question text editor toolbar.

CSPro supports all tags and attributes in standard <link "https://developer.mozilla.org/en-US/docs/Glossary/HTML5">HTML5</link>, including images, tables, and CSS styles.

The HTML for each question does not include the &lt;html&gt; or &lt;body&gt; tags. The HTML question text is inserted into to a complete HTML document that already has those tags.


<subheader>Styles</subheader>

All styles defined in the <link question_text_edit_styles.csdoc>Edit Styles</link> dialog are included as CSS classes in the HTML document by CSPro. These styles can therefore be used in the HTML question text by setting the class attribute of a tag to the name of one of the styles. For example:

<color HTML>
<p>A question with <span class="instruction">a style applied to this part</span>.</p>
</color>

The <b>normal</b> style is applied to the &lt;body&gt; tag by CSPro so that all unstyled text in the question text uses the <b>normal</b> style.

In addition, the document created by CSPro sets the background color to yellow on Windows Desktop and to gray on Android.

Finally the document adds some basic styling to tables such as borders and padding.


<subheader>External Files</subheader>

References to external files such as images and stylesheets may be included in the HTML question text. All paths must be relative paths based on the location of the application (.ent or .pen) file. Absolute paths are not supported. When deploying your application, make sure to copy the external files as well or include them as application <link resources.csdoc>resources</link>.


<subheader>Using JavaScript to Interact With CSPro</subheader>

You can use the <link action_invoker_execution_javascript_web.csdoc>Action Invoker</link>, called using JavaScript, to interact with various CSPro features. For example, you can call <link user_defined_functions.csdoc>user-defined functions</link> from question text. This feature allows advanced users to take advantage of the power of JavaScript to allow some interaction between question text and CSPro logic. For example:

<report HTML>
<p>
    You are entering person ~~curocc()~~.
    If all persons have been recorded, <a href="#" onclick="endRoster(); return false;">end the roster (with a household size of ~~curocc() - 1~~)</a>.
</p>
<script src="/action-invoker.js"></script>
<script>
    function endRoster() {
        let CS = new CSProActionInvoker();

        CS.Logic.evalAsync({
            logic: "EndPersonRoster();"
        });
    }
</script>
</report>

To use the Action Invoker from question text, you need proper permissions granted using <link action_invoker_access_token.csdoc>access tokens</link>.


<seealso html_in_cspro.csdoc change_formatting.csdoc question_text_file_qsf.csdoc />

<title>Run Production Batch Edits</title>

You can customize CSBatch's behavior by creating a <link program_information_file_pff.hgt>PFF file</link>. You can then use the PFF file as a command line parameter for CSBatch.exe. For example, if you name your PFF file MyEdits.pff, then you run the batch edit application by invoking:

<indent><font monospace>"C:\Program Files (x86)\CSPro <definition version />\CSBatch.exe" MyEdits.pff</font></indent>

This assumes that CSPro was installed in the default directory. Your PFF file must have a .pff extension.

You can create a PFF file in one of two ways: either [1] create one with a text editor (such as Notepad or Wordpad), or [2] have it generated automatically for you by launching your batch application from within the CSPro Designer. The file will have the same name as your application, but with a .pff extension instead of .bch. For example, if your batch application was named MyEdits.bch, the generated PFF would be named MyEdits.pff. You can also manipulate PFF files in logic by using the <link pff.hgt>pff</link> object.

The following section shows the options available to you in a CSBatch PFF file. A PFF file is not case sensitive, so you can use any combination of upper and lower case text.

<pff>
[Run Information]
Version=CSPro <definition version />
AppType=Batch

[Files]
Application=.\MyEdits.bch
InputData=.\MyInputData.dat
OutputData=.\MyOutputData.dat
Paradata=.\MyParadataLog.cslog
Listing=.\MyEdits.lst
ImputeFreqs=.\MyEdits.impute_freq.lst
ImputeStat=.\MyEdits.impute_stat.csdb
WriteData=.\WriteMessages.txt
SaveArray=.\MyEdits.bch.sva
CommonStore=.\MySettings.db

[ExternalFiles]
LOOKUP_DICT=.\LookupFile.dat

[Parameters]
ViewListing=Always
ViewResults=Yes
ListingWidth=120
MessageWrap=No
ErrmsgOverride=No
InputOrder=Sequential
Parameter=your choice
Language=LN
OnExit=.\Menu.pff
</pff>


<subheader>[Run Information]</subheader>

The <pffcolor>[Run Information]</pffcolor> block is required and must appear exactly as shown in the example above.


<subheader>[Files]</subheader>

The <pffcolor>[Files]</pffcolor> block is required. A description of the files, not all of which have to be specified, is as follows:

<list>
	<li><pffcolor>Application</pffcolor>=the name of the batch edit application that you created.</li>
	<li><pffcolor>InputData</pffcolor>=the data file against which the batch edit program will run. This file will not be modified during the run.</li>
	<li><pffcolor>OutputData</pffcolor>=the revised/corrected input data will be saved as this file.</li>
	<li><pffcolor>Paradata</pffcolor>=the name of a file where <link paradata.hgt>events</link> logged during the application's run are saved.</li>
	<li><pffcolor>Listing</pffcolor>=a report of the batch operation.</li>
	<li><pffcolor>ImputeFreqs</pffcolor>=if you have any <logiccolor>impute</logiccolor> function calls in your program, the results of these statements will be written to this frequencies file.</li>
	<li><pffcolor>ImputeStat</pffcolor>=if you have any <logiccolor>impute</logiccolor> function calls in your program that use the <logiccolor>stat</logiccolor> command, the results of these statements will be written to this data file.</li>
	<li><pffcolor>WriteData</pffcolor>=if there are one or more <logiccolor>write</logiccolor> function calls in your program, the text of these statements will be written to this file.</li>
	<li><pffcolor>SaveArray</pffcolor>=if your program contains one or more <link saved_arrays_file_sva.hgt>saved arrays</link>, the contents of these arrays will be read from and written to this file.</li>
	<li><pffcolor>CommonStore</pffcolor>=if you use the <logiccolor>loadsetting</logiccolor> or <logiccolor>savesetting</logiccolor> functions in your program, this file overrides the default location where these settings are saved.</li>
</list>


<subheader>[ExternalFiles]</subheader>

If the <pffcolor>[ExternalFiles]</pffcolor> block is present, it means that a second (or more) dictionary was linked to the batch application. In the example above, LOOKUP_DICT is the dictionary name, and LookupFile.dat is the name of the data file that contains the <link lookup_files.hgt>lookup codes</link>.


<subheader>[Parameters]</subheader>

The <pffcolor>[Parameters]</pffcolor> block is optional. This section defines parameters for the batch run.

<list>
	<li><pffcolor>ViewListing</pffcolor>=determines whether you see the batch run report. If this entry is missing or set to <b>Always</b>, then you will see the generated report. Other available options are <b>OnError</b>, in which case you will see the listing report only if an error occurred during the run, or <b>Never</b>, in which case you will never be shown the generated report.</li>
	<li><pffcolor>ViewResults</pffcolor>=determines whether or not the impute and/or write file are displayed in Text Viewer at the end of the run. The available choices are <b>Yes</b> or <b>No</b>. If the entry is missing, the resultant file(s) will be displayed by default. For more information on these files, see <topic run_a_batch_edit_application.hgt />.</li>
	<li><pffcolor>ListingWidth</pffcolor>=allows you to control the number of characters outputted to the listing file before forcing the start of a new line. This is set to 120 characters by default. If your screen resolution and/or printer permits, it may be useful to increase the width of the listing file. This only applies to text <link listing_file.hgt>listing files</link>.</li>
	<li><pffcolor>MessageWrap</pffcolor>=determines whether or not summary messages displayed at the end of a listing file will be outputted on several lines when they are too long to fit on one line. The default option is <b>No</b>, in which case the messages are truncated so that they fit on one line. This only applies to text <link listing_file.hgt>listing files</link>.</li>
	<li><pffcolor>ErrmsgOverride</pffcolor>=allows you to override the default behavior of the <logiccolor>errmsg</logiccolor> function. The override only affects <logiccolor>errmsg</logiccolor> functions used in the code without a <logiccolor>case</logiccolor> or <logiccolor>summary</logiccolor> specifier. The option <b>No</b> maintains the default behavior (displaying the messages for each case, as well as in the summary). The option <b>Summary</b> only displays the message in the summary. The option <b>Case</b> displays the message for each case but not in the summary.</li>
	<li><pffcolor>InputOrder</pffcolor>=allows you to override the default order in which cases are processed in a data file. The default option, <b>Sequential</b>, means that cases will be processed from the first case to the last case, in file order. The option <b>Indexed</b> overrides this order and cases will be processed in alphabetical order of the case IDs. Text data files can contain duplicates case IDs if processed in sequential order, but not in indexed order.</li>
	<li><pffcolor>Parameter</pffcolor>=allows you to pass in a string to your program. The parameter can be any length, although the string that retrieves the value in your program (via the <logiccolor>sysparm</logiccolor> function) must be large enough to accommodate it. Once the parameter is retrieved, it can be parsed by your program for further usage.</li>
	<li><pffcolor>Language</pffcolor>=specifies the initial language of the program. The parameter must match the name of a language specified in the dictionary or message file.</li>
 	<li><pffcolor>OnExit</pffcolor>=specifies a PFF file to run after the application closes. This can be useful, for example, if you want to relaunch a menu program after processing data.</li>
</list>

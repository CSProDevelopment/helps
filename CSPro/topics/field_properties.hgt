<title>Field Properties</title>

<font white>HELPTODO</font>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 11" />
<style type="text/css">/*<![CDATA[*/
body {
	background-color: #ffffff;
}
/*]]>*/</style>
</head>

<body style="font-family: Arial; font-size: 10pt; background-color: #ffffff;">
<h5 style="text-align: left; font-size: 12pt; margin-top: 6.00pt; margin-bottom: 2.00pt;"><b><font
	 style="font-family: Arial; font-size: 18pt; font-weight: bold;" face="Arial"
	 size="5">Field Properties</font></b></h5>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;">&#160;</p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;"><font
	 style="font-family: Arial; font-size: 10pt;" face="Arial" size="2">Right-click
 on the field and select Properties to get to the Field Properties Dialog
 Box.</font> <font style="font-family: Arial; font-size: 10pt;" face="Arial"
					 size="2">In CSPro you may define the following special
 types of fields:</font></p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;">&#160;</p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;"><b><font
	 style="font-family: Arial; font-size: 10pt; font-weight: bold;" face="Arial"
	 size="2">â€¢&#160;Persistent fields</font></b></p>
<p style="text-align: left; margin-left: 10.80pt; margin-top: 0.00pt; margin-bottom: 0.00pt;"><font
	 style="font-family: Arial; font-size: 10pt;" face="Arial" size="2">Persistent
 fields are ID fields that take the value from the previous case in the
 data file as their default. Persistent fields are typically used for geographic
 IDs that change very seldom from one case to another. These fields are
 shown as light gray boxes on the form. In CSEntry, the operator must press
 a special key (F7) to change the value of a persistent field. You can
 make any ID field (except for mirror fields) persistent, as long as it
 is already on a form.</font></p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;">&#160;</p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;"><b><font
	 style="font-family: Arial; font-size: 10pt; font-weight: bold;" face="Arial"
	 size="2">â€¢</font></b><b><font style="font-family: Arial; font-size: 10pt;
									 font-weight: bold;" face="Arial" size="2">&#160;</font></b><b><font
	 style="font-family: Arial; font-size: 10pt; font-weight: bold;" color="#000000"
	 face="Arial" size="2">Sequential fields</font></b></p>
<p style="text-align: left; margin-left: 10.80pt; margin-top: 0.00pt; margin-bottom: 0.00pt;"><font
	 style="font-family: Arial; font-size: 10pt;" face="Arial" size="2">Sequential
 fields</font> <font style="font-family: Arial; font-size: 10pt;" face="Arial"
					 size="2">automatically increment at data entry time.
 They are commonly used as occurrence-number fields</font> <font style="font-family: Arial;
	 font-size: 10pt;" face="Arial" size="2">in multiple groups. A sequential
 field takes the value</font> <font style="font-family: Courier; font-size: 10pt;"
									 face="Courier" size="2">1</font> <font
	 style="font-family: Arial; font-size: 10pt;" face="Arial" size="2">on
 the first occurrence. For subsequent occurrences, CSEntry will use the
 value of the previous occurrence and add</font> <font style="font-family: Courier;
														 font-size: 10pt;"
														 face="Courier"
														 size="2">1</font><font
	 style="font-family: Arial; font-size: 10pt;" face="Arial" size="2">.
 If the field is not also marked as &quot;protected&quot;, the operator
 may change the sequence at any time by simply keying a new value, and
 from that point, CSEntry will use this new value to continue the sequential
 incrementation. You can make any field (except for mirror fields) sequential,
 as long as it is already on a form. You can define your own kinds of sequential
 behavior for fields</font> <font style="font-family: Arial; font-size: 10pt;"
									 face="Arial" size="2">by writing pre-processing
 logic. In this case, do not use the sequential field attribute.</font></p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;">&#160;</p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;"><b><font
	 style="font-family: Arial; font-size: 10pt; font-weight: bold;" face="Arial"
	 size="2">â€¢</font></b><b><font style="font-family: Arial; font-size: 10pt;
									 font-weight: bold;" face="Arial" size="2">&#160;Protected
 fields&#160;</font></b></p>
<p style="text-align: left; margin-left: 10.80pt; margin-top: 0.00pt; margin-bottom: 0.00pt;"><font
	 style="font-family: Arial; font-size: 10pt;" face="Arial" size="2">Protected
 fields</font> <font style="font-family: Arial; font-size: 10pt;" face="Arial"
					 size="2">are not keyed during data entry. Protected
 fields</font> <font style="font-family: Arial; font-size: 10pt;" face="Arial"
					 size="2">are commonly used to display a value that
 is calculated elsewhere (for example, the sum of other keyed fields).
 You must write logic to set the value of a protected field. You can make
 any field protected, as long as it is already on a form.</font></p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;">&#160;</p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;"><b><font
	 style="font-family: Arial; font-size: 10pt; font-weight: bold;" face="Arial"
	 size="2">â€¢</font></b><b><font style="font-family: Arial; font-size: 10pt;
									 font-weight: bold;" face="Arial" size="2">&#160;</font></b><b><font
	 style="font-family: Arial; font-size: 10pt; font-weight: bold;" color="#000000"
	 face="Arial" size="2">Upper Case fields</font></b></p>
<p style="text-align: left; margin-left: 10.80pt; margin-top: 0.00pt; margin-bottom: 0.00pt;"><font
	 style="font-family: Arial; font-size: 10pt;" face="Arial" size="2">Alphanumeric
 fields can be upper case. This means that every alphabetic character that
 is keyed will be forced to upper case.</font></p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;">&#160;</p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;"><b><font
	 style="font-family: Arial; font-size: 10pt; font-weight: bold;" face="Arial"
	 size="2">â€¢&#160;Mirror fields</font></b></p>
<p style="text-align: left; margin-left: 10.80pt; margin-top: 0.00pt; margin-bottom: 0.00pt;"><font
	 style="font-family: Arial; font-size: 10pt;" face="Arial" size="2">Mirror
 fields</font> <font style="font-family: Arial; font-size: 10pt;" face="Arial"
					 size="2">show the value of a previously-entered field
 on the screen. The cursor never goes to a mirror field during data entry.
 Mirror fields</font> <font style="font-family: Arial; font-size: 10pt;"
							 face="Arial" size="2">are useful to display
 values from one screen on another screen. Any field from a single-occurrence
 group can be a mirror field. A common use of mirror fields</font> <font
	 style="font-family: Arial; font-size: 10pt;" face="Arial" size="2">is
 to show the geographic IDs on all screens. The first form might contain
 the geographic (level) ID fields</font> <font style="font-family: Arial;
												 font-size: 10pt;" face="Arial"
												 size="2">which the operator
 keys in, and subsequent forms might contain the geographic ID mirror fields,
 which will show the operator the ID values even when the ID form is not
 on screen. The first time you drag a dictionary item onto a form you create
 the normal entry field. On each subsequent occasion that you drag the
 same dictionary item onto a form, you create a mirror field.</font></p>
<p style="text-align: left; margin-left: 10.80pt; margin-top: 0.00pt; margin-bottom: 0.00pt;">&#160;</p>
<p style="text-align: left; margin-top: 0.00pt; margin-bottom: 0.00pt;"><b><font
	 style="font-weight: bold;">See also:</font></b> <a href="change_field_properties.html">Change
 Field Properties</a>, <a href="Field_Properties_(for_Multiple_Fields).html">Field
 Properties (for Multiple Fields)</a></p>
</body>
</html>

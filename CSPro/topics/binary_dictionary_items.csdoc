<title>Binary Dictionary Items</title>

In addition to the standard numeric and alpha <link data_type.csdoc>data types</link>, dictionary items can wrap the following <link object_dot_notation.csdoc>CSPro objects</link> that contain binary data:

<list>
    <li><link Audio.csdoc>Audio</link></li>
    <li><link Document.csdoc>Document</link></li>
    <li><link Geometry.csdoc>Geometry</link></li>
    <li><link Image.csdoc>Image</link></li>
</list>

These binary data types are only available if the dictionary option <link data_dictionary_menu.csdoc>Enable Binary Items (experimental)</link> has been checked. Once enabled, you cannot disable the option unless all binary dictionary items have been removed from your dictionary.

Binary dictionary items cannot have <link value_sets_description.csdoc>value sets</link> and many <link item_properties.csdoc>item properties</link> do not apply to these items.

Binary dictionary items can only be used when using the following <link data_sources.csdoc>data sources</link>: <link data_source_csdb.csdoc>CSPro DB</link>, <link data_source_csdbe.csdoc>Encrypted CSPro DB</link>, <link data_source_json.csdoc>JSON</link>, <link data_source_none.csdoc>None</link>, and <link data_source_memory.csdoc>In-Memory</link>. When using a data source that does not support binary data, such as <link data_source_text.csdoc>Text</link>, you will get a runtime error when attempting to run an application that contains binary dictionary items.


<subheader>Syncing Binary Dictionary Items</subheader>

Binary dictionary items are <link synchronization.csdoc>synchronized</link> as part of a call to <logiccolor>syncdata</logiccolor>. If binary data has already been uploaded to a synchronization server, the data will not be uploaded again. However, it is still a good idea to be aware of the size of the binary data that you synchronize, as syncing these cases can slow down syncing activities significantly.


<subheader>Usage Within CSPro Applications</subheader>

As of CSPro <definition CSPro::version />, binary dictionary items cannot be added to forms. Instead, you will need to write logic within your application that references these items in order to manipulate them. The functions available with the <link Audio.csdoc>Audio</link>, <link Document.csdoc>Document</link>, <link Geometry.csdoc>Geometry</link>, and <link Image.csdoc>Image</link> objects can be used on the binary dictionary items when valid (an occurrence of the parent record exists). For example:

<logic>
PROC ROOF_TYPE

    if accept("Do you want to take a photo of the roof?", "Yes", "No") = 1 then

        // take a photo, storing the image in the binary dictionary item ROOF_IMAGE
        if ROOF_IMAGE.takePhoto() then

            // because these images will be synced, ensure that the photo is not too large
            ROOF_IMAGE.resample(maxWidth := 1200, maxHeight := 800);

        endif;

    endif;
</logic>


<subheader>Usage Within CSPro Tools</subheader>

While binary dictionary items are experimental, they cannot be used within the <link CSExport::introduction_to_export_data.csdoc>Export Data</link> and <link CSFreq::introduction_to_tabulate_frequencies.csdoc>Tabulate Frequencies</link> tools. You will note that binary dictionary items do not appear in the tree. However, the rest of CSPro's <link tool_list.csdoc>tools</link> work with binary data.


<link DataViewer::introduction_to_data_viewer.csdoc>Data Viewer</link>: When viewing a case within Data Viewer, if any binary dictionary items exist in the case, they will displayed within the field. If an image has been stored, a preview of that image appears. If it is an audio clip, you have the option to play it within Data Viewer. For all binary data types you have the option to open the file (in read-only mode) or save to a new file by clicking on the thumbnail or choosing the <i>Open</i> and <i>Save</i> options listed beneath each file.


<link CSDiff::introduction_to_compare_data.csdoc>Compare Data</link>: When a binary dictionary item is chosen for comparison, the size of the file associated with that item is compared, regardless of the file name or file type. If the file sizes are the same, then the contents will be compared.


<link CSReFmt::introduction_to_reformat_data.csdoc>Reformat Data</link>: Reformating binary dictionary items is possible in a few scenarios:

<indent><table 3 header nowrap>
    <cell>Input</cell><cell nowrap>Output</cell><cell>Outcome</cell>
    <cell>Alpha</cell><cell nowrap>Binary Dictionary Item</cell><cell>Fails</cell>
    <cell>Binary Dictionary Item</cell><cell nowrap>Alpha</cell><cell>Fails</cell>
    <cell>Binary Dictionary Item</cell><cell nowrap>Audio</cell><cell>Succeeds if the MIME type is a valid audio type</cell>
    <cell>Binary Dictionary Item</cell><cell nowrap>Document</cell><cell>Succeeds</cell>
    <cell>Binary Dictionary Item</cell><cell nowrap>Geometry</cell><cell>Succeeds if the MIME type is GeoJSON</cell>
    <cell>Binary Dictionary Item</cell><cell nowrap>Image</cell><cell>Succeeds if the MIME type is a valid image type</cell>
    <cell>Binary Dictionary Item</cell><cell nowrap>Numeric</cell><cell>Fails</cell>
    <cell>Numeric</cell><cell nowrap>Binary Dictionary Item</cell><cell>Fails</cell>
</table></indent>


<link CSSort::introduction_to_sort_data.csdoc>Sort Data</link>: If a binary dictionary item is chosen as the sort key, the size of the file associated with the binary dictionary item is used as the sort value.


<note type="todo" text="split the information in this file into more relevant sections in CSSort [add a page on how sorts work by variable type], CSReFmt [add a page on how items are reformatted], etc." />


<seealso data_type.csdoc />

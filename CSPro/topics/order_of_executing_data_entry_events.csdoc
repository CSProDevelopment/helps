<title>Order of Executing Data Entry Events</title>

An "event" is a unit of logic associated with an element of the edit tree, such as a form, a field, etc. The order in which events are executed during data entry is dependent on two factors:

<list ordered>
	<li>The inherent order imposed by the CSPro software design, and</li>
	<li>The order in which data items are entered, which is determined by the designer of the application</li>
</list>

CSPro is based on the concept of a "case" containing one or more types of "collections of information." The "case" will usually correspond to the questionnaire used in the survey or census, and the "collections of information" [or groups of data items] will usually correspond to one or more record types that make up the case/questionnaire. These elements constitute a hierarchy, and in applying logic, CSPro follows this hierarchy; that is, it begins with any logic that pertains to the file itself, and works "down the tree" through the various levels. CSPro executes application events one case at a time. During data entry, <logiccolor>preproc</logiccolor>, <logiccolor>onfocus</logiccolor>, <logiccolor>onoccchange</logiccolor>, <logiccolor>killfocus</logiccolor> and <logiccolor>postproc</logiccolor> statements are executed in the order in which they are encountered.

The following diagram illustrates the default order of events for a two-level data entry application that has no <logiccolor>skip</logiccolor> or <logiccolor>advance</logiccolor> statements that might otherwise alter the program's natural flow. Level 1 has two forms (1 and 2) and level 2 has one form (3). This description applies to both system- and operator-controlled applications.

<font monospace>
Form&nbsp;File&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;Level&nbsp;1&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;1&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;1&nbsp;<logiccolor>onfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;11&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;11&nbsp;<logiccolor>onfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>(entry&nbsp;of&nbsp;Field&nbsp;11)</i>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;11&nbsp;<logiccolor>killfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;11&nbsp;<logiccolor>postproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;19&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;19&nbsp;<logiccolor>onfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>(entry&nbsp;of&nbsp;Field&nbsp;19)</i>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;19&nbsp;<logiccolor>killfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;19&nbsp;<logiccolor>postproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;1&nbsp;<logiccolor>killfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;1&nbsp;<logiccolor>postproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;2&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;2&nbsp;<logiccolor>onfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;21&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;21&nbsp;<logiccolor>onfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>(entry&nbsp;of&nbsp;Field&nbsp;21)</i>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;21&nbsp;<logiccolor>killfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;21&nbsp;<logiccolor>postproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;29&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;29&nbsp;<logiccolor>onfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>(entry&nbsp;of&nbsp;Field&nbsp;29)</i>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;29&nbsp;<logiccolor>killfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;29&nbsp;<logiccolor>postproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;2&nbsp;<logiccolor>killfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;2&nbsp;<logiccolor>postproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;Level&nbsp;2&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;3&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;3&nbsp;<logiccolor>onfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;31&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;31&nbsp;<logiccolor>onfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>(entry&nbsp;of&nbsp;Field&nbsp;31)</i>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;31&nbsp;<logiccolor>killfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;31&nbsp;<logiccolor>postproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;39&nbsp;<logiccolor>preproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;39&nbsp;<logiccolor>onfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>(entry&nbsp;of&nbsp;Field&nbsp;39)</i>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;39&nbsp;<logiccolor>killfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;39&nbsp;<logiccolor>postproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;3&nbsp;<logiccolor>killfocus</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form&nbsp;3&nbsp;<logiccolor>postproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;Level&nbsp;2&nbsp;<logiccolor>postproc</logiccolor>~!~
&nbsp;&nbsp;&nbsp;&nbsp;<i>(repeat&nbsp;level&nbsp;2&nbsp;procedures&nbsp;for&nbsp;other&nbsp;level&nbsp;2&nbsp;nodes)</i>~!~
&nbsp;&nbsp;&nbsp;&nbsp;Level&nbsp;1&nbsp;<logiccolor>postproc</logiccolor>~!~
Form&nbsp;File&nbsp;<logiccolor>postproc</logiccolor>
</font>

Note that the natural flow through the fields can also be altered by the use of the cursor or mouse. For example:

<subheader>Scenario 1</subheader>

<indent>
Given: Three fields (A, B, and C). From Field A, click on Field C. Assume all fields have <logiccolor>preproc</logiccolor>, <logiccolor>onfocus</logiccolor>, <logiccolor>killfocus</logiccolor>, and <logiccolor>postproc</logiccolor> events.~!~
Result: Field A's <logiccolor>killfocus</logiccolor> would execute, but its <logiccolor>postproc</logiccolor> would not. Nothing would execute for Field B. Finally, Field C's <logiccolor>preproc</logiccolor> and <logiccolor>onfocus</logiccolor> would execute.
</indent>

<subheader>Scenario 2</subheader>

<indent>
Given: Form 1, which contains one field, Field 1. Form 2, which also contains one field, Field 2. After keying Field 1, you are automatically advanced to Form 2, Field 2. You then decide to use the up/left arrow to move back to Form 1. Assume both forms and both fields have <logiccolor>preproc</logiccolor>, <logiccolor>onfocus</logiccolor>, <logiccolor>killfocus</logiccolor>, and <logiccolor>postproc</logiccolor> events.~!~
Result: Field 2's <logiccolor>killfocus</logiccolor> would execute, but its <logiccolor>postproc</logiccolor> would not. Next, Form 1's <logiccolor>onfocus</logiccolor> would execute. Finally, Field 1's <logiccolor>onfocus</logiccolor> would execute (but its <logiccolor>preproc</logiccolor> would not). Note that it does not matter how many fields are on Form 1; the <logiccolor>onfocus</logiccolor> for Form 1 would always execute.
</indent>

Essentially, if the programmer uses logic, or if the data entry operator moves backwards or forwards with the mouse or arrow keys, the natural flow of the program will be altered. If exiting a form, field, or roster prematurely, the <logiccolor>killfocus</logiccolor> event will execute but the <logiccolor>postproc</logiccolor> event will not. Similarly, if entering a form, field, or roster by backing up into it, the <logiccolor>onfocus</logiccolor> event will execute but the <logiccolor>preproc</logiccolor> event for it will not.

<seealso cspro_program_structure.csdoc order_of_executing_batch_edit_events.csdoc />

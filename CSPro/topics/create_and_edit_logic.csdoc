<title>Create and Edit Logic</title>

You can use the CSPro language to write logic for virtually any part of your data entry or batch edit application: a <link level_description.csdoc>level</link>, <link data_entry_elements.csdoc>roster</link>, <link data_entry_elements.csdoc>form</link>, or <link data_entry_elements.csdoc>field</link>. In a data entry application you must make sure the screen has the <link view_logic.csdoc>logic view</link> on the right and the <link data_entry_tree.csdoc>data entry tree</link> on the left, so you can click on the item for which you want to write logic. You can see the logic for the whole application by clicking on the forms file (usually the topmost node) on the data entry or batch edit tree.

<subheader>Example: Programming a Message for the Keyer</subheader>

Give a message for the keyer if there are married (or previously married) people under the age of 12. Click on the "Marital Status" field on the forms tree, <logiccolor>P06_MARITAL_STATUS</logiccolor> in our example. In the text editor, at the top of the logic view, you will see:

<logic>
PROC P06_MARITAL_STATUS
</logic>

Now enter the following:

<logic>
if P06_MARITAL_STATUS <> 1 and P05_AGE < 12 then
	errmsg("Not 'never married' but less than 12 years old");
endif;
</logic>

Note that this particular verification can be done only after data has been entered in both fields. If for some reason <logiccolor>AGE</logiccolor> is captured after <logiccolor>P06_MARITAL_STATUS</logiccolor>, then these instructions would be placed in the <logiccolor>AGE</logiccolor> field's logic.

<subheader>Example: Programming a Skip</subheader>

Program a skip after the marital status question to skip over "Age at First Marriage" if the person is never married. Click on the "Marital Status" field on the forms tree, <logiccolor>P06_MARITAL_STATUS</logiccolor> in our example. In the text editor, at the top of the logic view, enter:

<logic>
PROC P06_MARITAL_STATUS

	if P06_MARITAL_STATUS = 1 then
		skip to P08_WORK_STATUS;
	endif;
</logic>

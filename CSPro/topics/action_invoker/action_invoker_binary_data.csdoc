<title>Binary Data in the Action Invoker</title>

The <link action_invoker.csdoc>Action Invoker</link> does not directly allow binary data as an input or return it as an output, so it uses routines to convert binary data to and from string representations.


<subheader>Inputs: Converting a String to Binary Data</subheader>

When specifying a format to describe binary data passed to the Action Invoker as an input, typically using the argument <arg>bytesFormat</arg>, there are six options, with the default option, if none is specified, as <logiccolor>"autodetect"</logiccolor>:

<list>
    <li><logiccolor>"autodetect"</logiccolor>: When autodetecting the format, the binary data string's prefix is examined. If it begins with <logiccolor>"data:"</logiccolor>, it is processed as if it were a data URL. If it begins with <logiccolor>"cscache:"</logiccolor>, it is processed as if the bytes are stored in memory. If the prefix matches neither  of those values, it is processed as if it were encoded as Base64.</li>
    <li><logiccolor>"Base64"</logiccolor>: The binary data string represents bytes in <link "https://en.wikipedia.org/wiki/Base64">Base64 format</link>.</li>
    <li><logiccolor>"cache"</logiccolor>: The binary data string represents bytes previously stored in memory when <logiccolor>"cache"</logiccolor> was used as the output format for binary data returned by another action. By default, once the bytes are accessed, they are cleared from the cache. If you want to keep the bytes in memory for future use, append <logiccolor>"?clear=false"</logiccolor> to the cache key.</li>
    <li><logiccolor>"dataUrl"</logiccolor>: The binary data string contains a <link "https://en.wikipedia.org/wiki/Data_URI_scheme">data URL</link>.</li>
    <li><logiccolor>"hex"</logiccolor>: The binary data string represents bytes in <link "https://en.wikipedia.org/wiki/Hexadecimal">hexadecimal format</link>.</li>
    <li><logiccolor>"text"</logiccolor>: The binary data string contains text that is converted to bytes in its <link unicode_primer.csdoc>UTF-8 representation</link>.</li>
</list>

An exception is thrown if the input binary data string is not valid when using a data URL, a cache key, or hexadecimal characters.


<subheader>Outputs: Returning Binary Data as a String</subheader>

When specifying a format for the binary data that Action Invoker returns, there are five options, with the default option, if none is specified, as <logiccolor>"dataUrl"</logiccolor>:

<list>
    <li><logiccolor>"Base64"</logiccolor>: The string returned represents bytes in <link "https://en.wikipedia.org/wiki/Base64">Base64 format</link>.</li>
    <li><logiccolor>"cache"</logiccolor>: The bytes are stored in memory and the string returned contains a key that can be used by other actions to retrieve the bytes. This key is only valid as long as the application is running.</li>
    <li><logiccolor>"dataUrl"</logiccolor>: The string returned contains a <link "https://en.wikipedia.org/wiki/Data_URI_scheme">data URL</link>.</li>
    <li><logiccolor>"hex"</logiccolor>: The string returned represents bytes in <link "https://en.wikipedia.org/wiki/Hexadecimal">hexadecimal format</link>. The hexadecimal characters are returned in lowercase.</li>
    <li><logiccolor>"localhostUrl"</logiccolor>: The string returned contains a <link localhost_url.csdoc>localhost URL</link> that can be used to access the binary data, served using a local web server. This URL is only valid as long as the application is running.</li>
</list>

No exceptions are thrown while returning binary data.


<subheader>Example</subheader>

Here is the presentation of the text <logiccolor>"Hello, World!"</logiccolor> in the four direct input formats:

<list>
    <li><b>Base64</b>: <logiccolor>"SGVsbG8sIFdvcmxkIQ=="</logiccolor></li>
    <li><b>Data URL</b>: <logiccolor>"data:text/plain;base64,SGVsbG8sIFdvcmxkIQ=="</logiccolor></li>
    <li><b>Hex</b>: <logiccolor>"48656c6c6f2c20576f726c6421"</logiccolor></li>
    <li><b>Text</b>: <logiccolor>"Hello, World!"</logiccolor></li>
</list>

Here is what the text may look like when returned as a format that is only valid when the application is running:

<list>
    <li><b>Cache</b>: <logiccolor>"cscache:819"</logiccolor></li>
    <li><b>Localhost URL</b>: <logiccolor>"http://localhost:50505/vf/1"</logiccolor></li>
</list>

<title>Data Sources</title>

Prior to version 7.0, CSPro only processed data files that were represented as ASCII, and later, <link unicode_primer.hgt>UTF-8</link> text files. In addition to the main text data file, CSEntry would create additional files to store information such as the notes, partial save statuses, and other case metadata. To support more dynamic data entry possibilities, there are now multiple data sources to which data can be entered and from which data can be read.

CSPro DB is now the default type for newly created data files, and future CSPro features may only be added for the CSPro DB type. When a file exists, CSPro attempts to determine what kind of file it is and then opens it with the appropriate data source handler.

Data sources are described using <link connection_string.hgt>connection strings</link>, which are generally simply file names. There are four types of data sources:

<subheader>Text</subheader>

The text data source is what was always used in CSPro prior to version 7.0. Cases are stored as text in UTF-8 format. Supporting text data sources allows CSPro to maintain backwards compatibility with existing data files. Text data sources can use any file extension with the exception of .csdb. If other programs directly use the CSPro data file (as opposed to using exported data), you may still want to use a text data source as other programs will not be able to read a CSPro DB file.

<subheader>CSPro DB</subheader>

The CSPro DB data source is the default type used for newly-created data entry data files since version 7.0; they have a file extension of <b>.csdb</b>. All information about a case is stored in this file, including the case contents, case labels, notes, partial save statuses, verification information, revision history, and a copy of the dictionary. The CSPro DB data source simplifies data collection, particularly if conducting a CAPI survey, as all information about cases is stored in a single place. It facilitates <link syncdata_function.hgt>syncing data</link>, as this revision history allows CSPro to only sync data that has changed.

Starting with CSPro 7.4, the CSPro DB file format stores the data captured in a relational database file using <link https://www.sqlite.org>SQLite</link> (see <topic csdb_relational_format.hgt /> for details). Due to this file format change, CSPro DB files created in version 7.4 or later cannot be used in versions 7.0 to 7.3. To use 7.4+ CSPro DB files in these earlier versions of CSPro, convert the CSPro DB file to text format, and then convert it back to CSPro DB format, using the desired version of CSPro.

Since CSPro DB (<b>.csdb</b>) files are no longer simple UTF-8 files, you can no longer view the collected data directly in  <link tool_list.hgt>Text Viewer</link>; instead, you must use the <link tool_list.hgt>Data Viewer</link> utility. You also can not use <b>.csdb</b> files with CSPro applications or CSPro tools that process text files (version 6.3 and earlier). To do so, use the <link tool_list.hgt>Data Viewer</link> tool to convert data from <b>.csdb</b> files to text.

<subheader>Encrypted CSPro DB</subheader>

The Encrypted CSPro DB data source is a CSPro DB file that is <link encrypted_data.hgt>encrypted</link> with a password and can only be opened with that password. Files created using this type have the extension <b>.csdbe</b>. Without the password there is no way to recover data from the file so it is important to implement a sufficient password management policy.

<subheader>None</subheader>

The none data source is not associated with a file and allows you to run programs without needing to associate a dictionary with a file, usually with the assumption that the file association will be determined during the program and assigned using the <logiccolor>setfile</logiccolor> function. Adding cases to a none data source will result in nothing happening and any attempt to load or write cases to the file will appear successful but nothing will happen. This data source is useful for menu programs or instances when you do not initially know what an external dictionary should be set to.

<seealso connection_string.hgt data_source_options.hgt csdb_relational_format.hgt />

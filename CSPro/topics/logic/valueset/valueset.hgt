<title>ValueSet Object</title>

In logic, a <logiccolor>ValueSet</logiccolor> is an object that contains information about the <link value_sets_description.hgt>possible values</link> that are considered permissible for a field. Each possible value contains a label, a code (the valid value), and can contain a link to an <link value_set_images.hgt>image</link> shown when the value set is <link capture_types.hgt>displayed</link>. The ValueSet object, once passed to the <logiccolor>setvalueset</logiccolor> function, becomes an item's dynamic value set.


<subheader>Functionality</subheader>

A ValueSet is a CSPro logic object and the following functions can be called via <link object_dot_notation.hgt>dot notation</link>:

<table 2 header nowrap>
	<cell>Function</cell><cell>Description</cell>
	<cell><logiccolor ValueSet>add</logiccolor></cell><cell>Adds a single value, or all the values from an existing value set, to the value set.</cell>
	<cell><logiccolor ValueSet>clear</logiccolor></cell><cell>Removes all values from the value set.</cell>
	<cell><logiccolor ValueSet>length</logiccolor></cell><cell>Returns the size of the value set.</cell>
	<cell><logiccolor ValueSet>randomize</logiccolor></cell><cell>Randomizes the order of entries in the value set.</cell>
	<cell><logiccolor ValueSet>remove</logiccolor></cell><cell>Removes the value with the specified code from the value set.</cell>
	<cell><logiccolor ValueSet>show</logiccolor></cell><cell>Displays the value set's labels (similarly to <logiccolor>accept</logiccolor>) and returns the code of the operator's selection.</cell>
	<cell><logiccolor ValueSet>sort</logiccolor></cell><cell>Sorts the order of entries in the value set by either label or code.</cell>
</table>

In addition to these object functions, ValueSet objects contain two built-in <link list.hgt>List</link> objects: <logiccolor>valueset_name.codes</logiccolor> and <logiccolor>valueset_name.labels</logiccolor>, which contain the codes and labels for the value set. These are read-only List objects and can be used in most ways that List objects can be used.

Several functions accept ValueSet objects as arguments, including: <logiccolor>getimage</logiccolor>, <logiccolor>getlabel</logiccolor>, <logiccolor>invalueset</logiccolor>, <logiccolor>maxvalue</logiccolor>, <logiccolor>minvalue</logiccolor>, <logiccolor>randomin</logiccolor>, <logiccolor>randomizevs</logiccolor>, and <logiccolor>setvalueset</logiccolor>. ValueSet objects can also be used with the <logiccolor>in</logiccolor> operator.


<subheader>Assignments</subheader>

ValueSet objects can be assigned to other ValueSet objects, which will replace the initial value set with the values of the assigned value set:

<logicsyntax>
<arg>valueset_name</arg> = <arg>another_valueset_name</arg>;
</logicsyntax>

When a ValueSet is used as an argument to a <link user_defined_functions.hgt>user-defined function</link>, it is <link function_arguments_ref.hgt>passed by reference</link>.


<subheader>Example</subheader>

<logic>
PROC RESPONDENT

preproc

	ValueSet respondent_valueset;
	
	do numeric counter = 1 while counter <= count(PERSON_REC)
		if AGE(counter) >= 15 and USUAL_MEMBER(counter) = 1 then
			respondent_valueset.add(NAME(counter), counter);
		endif;
	enddo;
	
	setvalueset(RESPONDENT, respondent_valueset);
</logic>


<seealso array.hgt list.hgt />

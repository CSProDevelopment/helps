<title>LoadSetting Function</title>
<context logic_help_loadsetting />

<subheader>Format</subheader>

<logicsyntax>
s = loadsetting(<arg>attribute</arg>『,<arg>default_setting</arg>』);
</logicsyntax>

<subheader>Description</subheader>

The <logiccolor>loadsetting</logiccolor> function, using the string expression <arg>attribute</arg>, retrieves a setting from an attribute-value pair, a setting that has been previously saved using the <logiccolor>savesetting</logiccolor> function. An optional string expression <arg>default_setting</arg> can be provided and will be returned if no value has been saved for the given attribute.

The location from where settings are retrieved can be modified by altering the <pffcolor>CommonStore</pffcolor> attribute of a PFF file.

<subheader>Return Value</subheader>

The function returns a string containing the value associated with the attribute. If no value is associated with the attribute, then the function returns a blank string unless a default setting has been provided, in which case it returns the default setting.

<subheader>Example</subheader>

<logic>
PROC GLOBAL

function OnChangeLanguage()
	// save the selected language so that the change is persistent,
	// being available the next time that the program is run
	savesetting("Language",getlanguage());
end;


PROC MY_APPLICATION_FF

preproc

	// set the language at the start of the program, defaulting to English
	setlanguage(loadsetting("Language","EN"));
</logic>

<seealso savesetting_function.hgt user_configuration_settings.hgt />

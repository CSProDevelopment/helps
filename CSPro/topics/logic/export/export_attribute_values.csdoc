<title>Export Attribute: value</title>

The <b>values</b> attribute can be used with <b>.csv</b>, semicolon, <b>.tsv</b>, and Excel files. It controls how the data file's values are written to the file. Available options are:

	<list>
	<li><b>codes</b>&mdash;numeric codes will be written (the default behavior when this attribute is not used)</li>
	<li><b>labels</b>&mdash;the value set's label will be used (for example, if Sex=1 or 2, the labels might read Male and Female)</li>
	<li><b>codes-and-labels</b>&mdash;two columns will be written for each data point; the codes, followed by the value set label for that item</li>
</list>

For example, suppose you want to generate an Excel file that uses the labels in the header and generates codes and labels (so, 2 columns) for each data point. The syntax for the Output Data file connection string would be as follows:

<pff>OutputData=.\pop_rec.xlsx|record=POP_REC&header=labels&values=codes-and-labels</pff>

And the resultant data source would appear as follows (a partial screenshot being shown):

<center><image values_and_labels_attribute.png /></center>

You can see that generating two columns for the relationship, sex, and marital status variables clarified the meaning of those codes; however for other fields, such as age, no additional information is imparted. You may also notice that for some fields (Marital Status), no value is given. Changing the connection string to include the mapped-special-values attribute:

<pff>OutputData=.\pop_rec.xlsx|record=POP_REC&header=labels&values=codes-and-labels&mapped-special-values=notappl</pff>

yielded no changes. What else could be happening? As you can guess from the ages and see from the column heading, the marital status field was not asked (i.e., it was skipped) for persons under 15 years of age. Oftentimes marital status is asked for all persons regardless of age; in that instance, we would have expected to see "Never Married" or "Single".

<seealso export_attributes.csdoc />

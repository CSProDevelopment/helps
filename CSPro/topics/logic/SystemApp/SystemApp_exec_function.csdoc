<title>SystemApp.exec Function</title>


<subheader>Format</subheader>

<logicsyntax>// Android format</logicsyntax>
<logicsyntax>
b = system_app_name.exec(『<arg>package_name</arg>『, <arg>activity_name</arg>』』);
</logicsyntax>

<logicsyntax>// Windows format</logicsyntax>
<logicsyntax>
b = system_app_name.exec(<arg>executable_name</arg>);
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor>SystemApp.exec</logiccolor> function executes a system application associated with the <link systemapp.csdoc>SystemApp</link> object. Any arguments set using the <logiccolor>SystemApp.setArgument</logiccolor> function are passed to the system application. On Android, a system application can return results which can be queried with the <logiccolor>SystemApp.getResult</logiccolor> function.


<subheader>Return Value</subheader>

The function returns a logical value of 1 (true) if the system application is started successfully and 0 (false) otherwise.


<subheader>Android Example</subheader>

On Android, the optional string expression <arg>package_name</arg> specifies the name of the Android application (package) that will be executed. An optional string expression <arg>activity_name</arg> specifies the name of the activity within the package that should be opened. If no arguments are provided, then the arguments specified using <logiccolor>SystemApp.setArgument</logiccolor> will be processed by the Android operating system and, if there is a way to handle these arguments, then an appropriate application will be opened.

<logic>
<include include_android_example.hgi />
</logic>


<subheader>Windows Example</subheader>

On Windows, a system application is an executable specified by the string expression <arg>executable_name</arg>. Typically the name is the full path of the executable, but for applications that have registered their name in the Windows Registry, you only need to provide the executable file name.

<logic>
<include include_windows_example.hgi />
</logic>


<seealso systemapp.csdoc systemapp_setargument_function.csdoc systemapp_getresult_function.csdoc />

<title>Replace Function</title>


<subheader>Format</subheader>

<logicsyntax>
s = replace(<arg>source_text</arg>, <arg>old_text</arg>, <arg>new_text</arg>);
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor>replace</logiccolor> function looks at <arg>source_text</arg> and replaces one or more instances of the substring <arg>old_text</arg> with the value in <arg>new_text</arg>. All arguments are string expressions and the replacement is case sensitive, meaning that <logiccolor>"c"</logiccolor> is recognized as different from <logiccolor>"C"</logiccolor>.

<subheader>Return Value</subheader>

The function returns a new string with the replaced text.


<subheader>Example 1</subheader>

<logic>
string example = "Robert Smith's son's name is Robert, Jr.";

example = replace(example, "Robert", "Bob");

// result: Bob Smith's son's name is Bob, Jr.
</logic>


<subheader>Example 2</subheader>

<logic>
function string GetFileUri(string local_filename)

	// get the full path in case the filename is relative
	local_filename = Path.concat(local_filename);
	
	// convert all slashes to forward slashes
	local_filename = replace(local_filename, "\", "/");
	
	// encode the filename as a URI
	exit "file:///" + encode(URI, local_filename);

end;

// ...

string reports_css_uri = GetFileUri("../CSS/Reports.css");
html_file.write("<link rel='stylesheet' type='text/css' href='%s'>", reports_css_uri);
</logic>


<seealso encode_function.hgt pos_function.hgt />

<title>Audio.Concat Function</title>

<subheader>Format</subheader>

<logicsyntax audio>
b = audio_name.concat(<arg>audio_filename</arg> ‖ <arg>audio_object</arg>);
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor audio>audio.concat</logiccolor> function appends an audio recording stored in a file specified by the argument <arg>audio_filename</arg> or an <link audio.hgt>audio</link> object specified by the argument <arg>audio_object</arg> to the current recording in an <link audio.hgt>audio</link> object. The result is a new recording that combines both recordings and is stored in the initial audio object.

The <logiccolor audio>audio.concat</logiccolor> function only works with audio files stored in m4a format (AAC encoded audio stored in an MPEG-4 container). This is the format of files recorded in CSPro using the <logiccolor audio>audio.record</logiccolor> and <logiccolor audio>audio.recordInteractive</logiccolor> functions. Audio files that come from sources other than CSPro will most likely not work with <logiccolor audio>audio.concat</logiccolor>.


<subheader>Return Value</subheader>

The function returns a logical value of 1 (true) if the recordings were concatenated successfully and a logical value of 0 (false) if there was an error combining the recordings.


<subheader>Example 1</subheader>

<logic>
audio recording;

recording.load("recording1.m4a");
recording.concat("recording2.m4a");
recording.save("combined.m4a");
</logic>

<subheader>Example 2</subheader>

<logic>
PROC GLOBAL
audio recordingQ1;
audio recordingQ2;

PROC SURVEY_FF

PROC SURVEY_LEVEL

// at end of questionnaire combine audio recordings from Q1 and Q2 and save
audio combined;
combined = recordingQ1;
combined.concat(recordingQ2);
string audioFilename = maketext("recording%v.m4a", HOUSEHOLD_ID);
combined.save(audioFilename);

PROC Q1
preproc
recordingQ1.record();

postproc
recordingQ1.stop();

PROC Q2
preproc
recordingQ2.record();

postproc
recordingQ2.stop();
</logic>

<seealso audio.hgt />

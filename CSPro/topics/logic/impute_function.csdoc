<title>Impute Function</title>


<subheader>Format</subheader>

<logicsyntax>
d = impute(<arg>item_name</arg>, <arg>new_value</arg>)
	『title(<arg>frequency_table_title</arg>)』
	『valueset(<arg>valueset_name</arg>)』
	『specific』
	『stat(『<arg>item_name1</arg>, ..., <arg>item_nameN</arg>』)』;	
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor>impute</logiccolor> function assigns a new value to an item. The <arg>item_name</arg> is a dictionary item, either numeric or alphanumeric, and <arg>new_value</arg> is an expression that matches the type of the item. The function is similar to using the assignment operator:

<logicsyntax><arg>item_name</arg> = <arg>new_value</arg>;</logicsyntax>

However, unlike using the assignment operator, the <logiccolor>impute</logiccolor> function keeps track of these assignments and generates a report on the frequency of values used in the imputations. These <link imputation.hgt>imputation</link> statistics are useful when cleaning data in a batch application. If your program contains any <logiccolor>impute</logiccolor> statements, the results of this function will be written a frequencies file. The default file extension is .impute_freq.lst, but you can use whatever extension you prefer.

The function has several optional arguments:

<b>Specify a frequency title</b> (<logiccolor>title</logiccolor>): If supplying a string expression as a <arg>frequency_table_title</arg>, this title will be used when the frequency writer creates the imputation frequencies. If no title is specified, a default title such as "Imputed Item SEX: Sex" will be used.

<b>Specify a frequency value set</b> (<logiccolor>valueset</logiccolor>): By default, when the frequency writer creates the imputation frequencies, it shows each value imputed and it looks at the item's primary value set, if one exists, to find a label that matches the value. If you would prefer to use a different value set when creating the imputation frequencies, you can specify a <arg>valueset_name</arg> that belongs to the item.

<b>Create a specific frequency table</b> (<logiccolor>specific</logiccolor>): Typically, if you have multiple <logiccolor>impute</logiccolor> statements for one item (with the same <logiccolor>valueset</logiccolor> setting), only one frequency table will be written, with the frequencies for all imputations combined. Even if differing titles are specified, one table will be written, with the title coming from the last executed imputation. If you would like a frequencies table for a particular imputation statement, you can use the <logiccolor>specific</logiccolor> command to indicate that a frequency table should be created for that imputation.


<subheader>Impute Stat Data</subheader>

<b>Create a data file with frequency details</b> (<logiccolor>stat</logiccolor>): If you want more details about imputations beyond the frequencies showing the imputed values, you can use the <logiccolor>stat</logiccolor> command to generate a data file that will contain information about each imputation. For each case in the input data that results in any imputations, the stat data file will contain an entry with the case IDs, the original value of the imputed item, the new value used in the imputation, and the line number of the <logiccolor>impute</logiccolor> statement that resulted in the imputation. For example:

<logic>
impute(SEX, 2)
stat();
</logic>

This would result in a data file with a record, <logiccolor>IMPUTE_SEX_REC</logiccolor>, with three items: <logiccolor>IMPUTE_SEX_INITIAL</logiccolor> (the initial value of <logiccolor>SEX</logiccolor>), <logiccolor>IMPUTE_SEX_IMPUTED</logiccolor> (the imputed value; in this case <logiccolor>2</logiccolor>), and <logiccolor>IMPUTE_SEX_LINE_NUMBER</logiccolor> (the line number of the imputation).

If you would like to see the value of other items that might be useful during analysis, you can specify <arg>item_name1</arg>, <arg>item_name2</arg>, and so on. The values of these items will be included in the stat data file. For example:

<logic>
impute(EDUCATION, getdeck(educationHotdeckBySexAge))
stat(SEX, AGE);
</logic>

By default, the only entries written to the stat data file are imputations where <logiccolor>stat</logiccolor> is included as part of the <logiccolor>impute</logiccolor> statement. Alternatively, you can specify an override:

<logicsyntax>
set impute(stat, on ‖ off ‖ default);
</logicsyntax>

If an override is coded, any <logiccolor>impute</logiccolor> statement that follows will either:

<list>
	<li><logiccolor>on</logiccolor>: automatically be included in the stat data file as if <logiccolor>stat()</logiccolor> were coded.</li>
	<li><logiccolor>off</logiccolor>: any <logiccolor>stat</logiccolor> commands will be ignored.</li>
	<li><logiccolor>default</logiccolor>: behave using the default behavior, where the stat data file only includes entries for imputations with <logiccolor>stat</logiccolor> commands.</li>
</list>


<subheader>Imputation Files</subheader>

Applications using the <logiccolor>impute</logiccolor> function can generate up to three files:

<list>
	<li>Imputation <link frequencies_file.hgt>frequencies</link> (with the default extension .impute_freq.lst)</li>
	<li>Imputation stat dictionary (if using <logiccolor>stat</logiccolor>, with the default extension .impute_stat.dcf)</li>
	<li>Imputation stat data (if using <logiccolor>stat</logiccolor>, with the default extension .impute_stat.csdb)</li>
</list>

You can specify the names of these data files in the <link run_a_batch_edit_application.hgt>File Associations</link> dialog or in your application's <link run_production_batch_edits.hgt>PFF file</link>.

The frequencies report contains five columns:

<html><pre>
                                  Imputed Item SEX: Sex
                                _____________________________ _____________
  Categories                         Frequency        CumFreq      %  Cum %
_______________________________ _____________________________ _____________
  1 Male                                   271            271   52.9   52.9
  2 Female                                 241            512   47.1  100.0
_______________________________ _____________________________ _____________
  Total                                    512            512  100.0  100.0
</pre></html>

<list>
	<li><b>Categories</b>: Lists the values that were assigned during the imputations and a value set label for the value (if applicable). For example: "2 Female."</li>
	<li><b>Frequency</b>: Shows the frequency (that is, the total number of times) each value was assigned. For example: 241 (code 2 assigned 241 times).</li>
	<li><b>CumFreq</b>: Displays the cumulative totals of the Frequency column.</li>
	<li><b>%</b>: Indicates what percentage each imputation represents from the total number of imputations made. For example: 47.1 (code 2 assigned 47.1% of the total number of imputations of <logiccolor>SEX</logiccolor> made).</li>
	<li><b>Cum %</b>: Displays the cumulative totals of the % column.</li>
</list>


<subheader>Return Value</subheader>

When imputing a numeric item, the function returns the numeric expression <arg>new_value</arg>. When imputing an alphanumeric item, the function returns 1 (true).


<subheader>Example</subheader>

<logic>
PROC SEX

if not invalueset(SEX) then

	// set all heads to men and everyone else to the opposite of the head's sex
	// (note that this is not a good imputation but is just a simple example)
	if curocc() = 1 then
		impute(SEX, 1)
		title("Head's Sex")
		specific;
	
	else
		impute(SEX, 3 - SEX(1));
	
	endif;
</logic>


<seealso imputation.hgt />

<title>List Object</title>

In logic, a <logiccolor>list</logiccolor> is similar to an <link array.hgt>one-dimensional array</link> but without a defined size. That is, a list is a collection of values, either numeric or string, that can grow or shrink in size.

<subheader>Functionality</subheader>

A list is a CSPro logic object and the following functions can be called via <link object_dot_notation.hgt>dot notation</link>:

<table 2 header nowrap>
	<cell>Function</cell><cell>Description</cell>
	<cell><logiccolor list>add</logiccolor></cell><cell>Adds a single value, or a list of values, to the end of a list.</cell>
	<cell><logiccolor list>insert</logiccolor></cell><cell>Inserts a single value, or a list of values, at a given position in the list.</cell>
	<cell><logiccolor list>remove</logiccolor></cell><cell>Removes the value at a given position from the list.</cell>
	<cell><logiccolor list>clear</logiccolor></cell><cell>Removes all values from the list.</cell>
	<cell><logiccolor list>length</logiccolor></cell><cell>Returns the size of the list.</cell>
	<cell><logiccolor list>seek</logiccolor></cell><cell>Returns the index of a specified value.</cell>
	<cell><logiccolor list>show</logiccolor></cell><cell>Displays the list's values (similarly to <logiccolor>accept</logiccolor>) and returns the index of the operator's selection.</cell>
</table>

In addition to these object functions, lists can be filled when used as arguments to functions such as <logiccolor>dirlist</logiccolor>, <logiccolor>keylist</logiccolor>, and <logiccolor hashmap>hashmap.getKeys</logiccolor>.

Lists can be assigned to other lists, which will replace the initial list with the values of the assigned list:

<logicsyntax>
<arg>list_name</arg> = <arg>another_list_name</arg>;
</logicsyntax>

Individual elements of lists can also be modified or added by using a one-based index:

<logicsyntax>
<arg>list_name</arg>(<arg>index</arg>) = <arg>modify_value</arg>;
<arg>list_name</arg>(list_name.length() + 1) = <arg>add_value</arg>;
</logicsyntax>


<subheader>Example</subheader>

<logic>
list string respondent_query;

do numeric counter = 1 while counter <= count(NAME)
	respondent_query.add(NAME(counter));
enddo;

numeric respondent_index = respondent_query.show("Who in the household is responding to questions?");
</logic>

<seealso array.hgt hashmap.hgt valueset.hgt />

<title>Freq Statement (Unnamed)</title>


<subheader>Format</subheader>

<logicsyntax>
Freq
include(<arg>variables_to_tabulate</arg>)
『exclude(<arg>variables_not_to_tabulate</arg>)』
『disjoint』
『breakdown(<arg>length</arg>)』
『universe(<arg>condition</arg>)』
『weight(<arg>weight_value</arg>)』
『<arg>formatting_options</arg>』
;
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor>Freq</logiccolor> statement is used to define a frequency table that will be written to the <link frequencies_file.hgt>frequencies file</link>. Unlike <link freq.hgt>named frequencies</link>, which allow for control over when frequencies are tallied, frequencies generated using the <logiccolor>Freq</logiccolor> statement are tallied at the location where they are defined. Due to this, the statement cannot be located in <logiccolor>PROC GLOBAL</logiccolor>, in user-defined functions, or in application procedures.

The <link CSFreq::introduction_to_tabulate_frequencies.hgt>Tabulate Frequencies</link> tool generates <logiccolor>Freq</logiccolor> statements automatically, so one way to learn about how to use the statement is to select items to tabulate in that tool and then use the <b>View</b> -> <b>Batch Logic</b> option to see the commands used to generate the specified frequencies.


<include include_freq_variable_specification.hgi />

<include include_freq_breakdown.hgi />


<subheader>Additional Commands</subheader>

The optional command <logiccolor>universe</logiccolor> allows you to specify a condition under which the frequency should be tallied. The values will be tallied when the <arg>condition</arg> evaluates to true.

The optional command <logiccolor>weight</logiccolor> allows you to weight each tally. The <arg>weight_value</arg> can be a constant number (like <logiccolor>10</logiccolor>), a dictionary item (like <logiccolor>HH_WEIGHT</logiccolor>) or any other numeric expression. If no weight is provided, a weight of 1 is used during the tallying.

Optional <link freq_formatting_options.hgt>formatting options</link> allow you to control how the frequency tables are generated. The formatting options include the following commands: <logiccolor>valueset</logiccolor>, <logiccolor>distinct</logiccolor>, <logiccolor>vset</logiccolor>, <logiccolor>heading</logiccolor>, <logiccolor>stat</logiccolor>, <logiccolor>percentiles</logiccolor>, <logiccolor>nofreq</logiccolor>, <logiccolor>decimals</logiccolor>, <logiccolor>sort</logiccolor>, <logiccolor>nonetpercents</logiccolor>, and <logiccolor>pagelength</logiccolor>.


<subheader>Example 1</subheader>

<logic>
PROC QUEST

	// create frequency tables for all numeric items in the
	// HOUSING_REC record with the exception of H13_PERSONS

	Freq
	include(numeric, HOUSING_REC)
	exclude(H13_PERSONS);
</logic>


<subheader>Example 2</subheader>

<logic>
PROC QUEST

	// create frequency tables for the default selection of items in
	// the PERSON_REC record, tallying only the first record occurrence

	// universe is used to make sure that we do not tally empty households

	// weight is 20 because we are creating frequencies on a 5% sample file

	// distinct means that the frequency tables will show all values,
	// not combining values if the value sets have ranges (such as age 0-4)

	Freq
	include(PERSON_REC(1))
	universe(totocc(PERSON_REC) > 0)
	weight(20)
	distinct;
</logic>


<subheader>Example 3</subheader>

<logic>
PROC QUEST

	// create a frequency table for the item H15_ASSETS, which
	// was collected using a checkbox with each value of length 2

	Freq(H15_ASSETS)
	breakdown(2);
</logic>


<seealso freq.hgt freq_statement_named.hgt freq_formatting_options.hgt />

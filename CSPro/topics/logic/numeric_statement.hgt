<title>Numeric Statement</title>

<subheader>Format</subheader>

<logicsyntax>
numeric <arg>var1</arg>『, <arg>var2</arg>, ..., <arg>varN</arg>』; 
</logicsyntax>

<subheader>Description</subheader>

The <b>numeric</b> statement declares temporary numeric variables used in applications. They will not be saved to a data file defined by a dictionary. A numeric variable is an integer or decimal number significant to 15 digits. Upon declaration a numeric variable's initial value will be zero.

Local variables, with a limited scope, can also be declared in functions and <logiccolor>PROC</logiccolor>s. The variable will only exist and be accessible from within the function or PROC where it is declared. (In the case of a PROC, it is available in all events within that PROC after its declaration. For example, a numeric declared in the preproc will still be accessible in the postproc.) 

While a locally-declared variable can not have the same name as a globally-declared variable, the same local variable name can be reused in other PROCS associated with individual variables.

<subheader>Example</subheader>

<logic>
PROC GLOBAL
  numeric NumOfKids, NumOfMoms;

PROC CHILDREN
  numeric x;
  
  NumOfKids = NumOfKids + 1;
  x = NumOfKids + NumOfAdults;  

PROC BIOLOGICAL_MOTHER
  numeric x;	// redeclaring a variable named "x", which is ok
  
  NumOfMoms = NumOfMoms + 1;
  x = NumOfMoms + NumOfDads;  
</logic>

<seealso array_statement.hgt alpha_statement.hgt String_Statement.hgt ensure_statement.hgt />

<title>FileWrite Function</title>
<context logic_help_filewrite />

<subheader>Format</subheader>

<logicsyntax>
b = filewrite(<arg>file_handler</arg>,<arg>message</arg>『,<arg>parameter1</arg>,...,<arg>parameterN</arg>』);
</logicsyntax>

<subheader>Description</subheader>

The <logiccolor>filewrite</logiccolor> function writes a line of text to the file associated with the <arg>file_handler</arg> (a name declared in a <logiccolor>file</logiccolor> statement in <logiccolor>PROC GLOBAL</logiccolor>).

The <arg>message</arg> is either a string expression or a numeric <link message_file.hgt>message number</link> that contains the text that is written to the file. If the text contains any <link message_formatting_options.hgt>message formatters</link>, the optional parameters <arg>parameter1</arg> to <arg>parameterN</arg> will be inserted into the text. There are some additional options for file output:

<list>
	<li>If you want to break a line of text into two lines, place <b>\n</b> where you want the line divided.</li>
	<li>If you want a text line to begin on a new page, place <b>\f</b> at the beginning of the text string.</li>
	<li>To output <b>\n</b> or <b>\f</b> as text instead of a new line or a new page, use a double backslash (e.g., <b>\\n</b>).</li>
</list>

<subheader>Return Value</subheader>

The function returns a logical value of 1 (true) if successful and 0 (false) otherwise.

<subheader>Example</subheader>

<logic>
PROC GLOBAL

file reportFile;

PROC EXAMPLE

	filewrite(reportFile,"Name,Sex,Age");
	
	do numeric ctr = 1 while ctr <= totocc(PERSON_REC)
		filewrite(reportFile,"%s,%d,%d",NAME(ctr),SEX(ctr),AGE(ctr));
	enddo;
</logic>
 
<seealso fileread_function.hgt message_formatting_options.hgt write_function.hgt />

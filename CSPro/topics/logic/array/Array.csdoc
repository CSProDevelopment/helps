<title>Array Object</title>

In logic, an <logiccolor>Array</logiccolor> is an object that contains a collection of elements of the same type, either numeric, alphanumeric, or string. An array can be of many dimensions, though each of these dimensions is of a fixed size. Arrays can be used in various processing operations, including defining a list of constant values (like month names) or working with hotdecks and <link deckarrays.csdoc>DeckArrays</link>.

Whenever an Array object is used in the application, a value or numeric expression for each dimension must be given. The initial array contents are zero (if numeric) and blank (if alphanumeric or string) until a value for each dimension is assigned. If using a numeric <link initialize_hot_decks_using_saved_arrays.csdoc>saved array</link>, the initial array contents are <logiccolor>default</logiccolor>.

If you want the behavior of an array but without fixed dimensions, you can use the <link HashMap.csdoc>HashMap</link> object, which is an associative array.


<subheader>Functionality</subheader>

An Array is a CSPro logic object and the following functions can be called via <link object_dot_notation.csdoc>dot notation</link>:

<table 2 header nowrap>
    <cell>Function</cell><cell>Description</cell>
    <cell><logiccolor Array>clear</logiccolor></cell><cell>Resets all array values to the default value.</cell>
    <cell><logiccolor Array>length</logiccolor></cell><cell>Returns the size of an array dimension.</cell>
    <include "../Symbol/all_symbols_with_json_in_out.hgi" />
</table>


<subheader>Assignments</subheader>

When an Array is used as an argument to a <link user_defined_functions.csdoc>user-defined function</link>, it is <link function_arguments_ref.csdoc>passed by reference</link>.


<seealso HashMap.csdoc List.csdoc />

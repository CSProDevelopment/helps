<title>Length Function</title>


<subheader>Format</subheader>

<logicsyntax>
i = length(<arg>string_expression</arg>);
</logicsyntax>


<subheader>Description</subheader>

The function <logiccolor>length</logiccolor> calculates the length of an alphanumeric <arg>string_expression</arg>. If the string is a dictionary item, the value returned is the length of the item. If it the string is the result of a function, the value returned is the length of the string returned by the function.


<subheader>Return Value</subheader>

The function returns the length of the string as an integer value. If using an <logiccolor>alpha</logiccolor> variable or a dictionary item, you may want to <logiccolor>strip</logiccolor> the string before calculating its length.


<subheader>Example</subheader>

<logic>
alpha (30) NAME = "John Henry";
length(NAME);					// returns 30
length(strip(NAME));			// returns 10
</logic>


<subheader>Uses on List and Array Objects</subheader>

The <logiccolor>length</logiccolor> function also operates on <logiccolor>List</logiccolor> and <logiccolor>Array</logiccolor> objects. When applied to a List, it returns the number of elements in the List. When applied on an Array, it returns the size of an Array dimension.


<subheader>Format</subheader>

<logicsyntax>
i = length(<arg>list_name</arg>);
i = length(<arg>array_name</arg>『, <arg>dimension</arg>』);
</logicsyntax>


<subheader>Examples</subheader>

<logic>
Array string usmca_countries(3) = "Canada", "Mexico", "United States";
length(usmca_countries); // returns 3;

// ...

Array AgeSexDeckArray(AGE_VS, SEX_VS);

do numeric age_counter = 1 while age_counter <= length(AgeSexDeckArray, 1)
	do numeric sex_counter = 1 while sex_counter <= length(AgeSexDeckArray, 2)
		// ...
	enddo;
enddo;
</logic>


<seealso array_length_function.csdoc />

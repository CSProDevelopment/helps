<title>Prompt Function</title>


<subheader>Format</subheader>

<logicsyntax>
s = prompt(<arg>message</arg>『, <arg>initial_value</arg>』『, <arg>prompt_type</arg>』);
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor>prompt</logiccolor> function displays a dialog box showing the string expression <arg>message</arg> and provides a text box for an operator to enter a string value. An optional string expression <arg>initial_value</arg> determines the starting value displayed to the operator. Another optional argument, <arg>prompt_type</arg>, provides a way to customize the kind of entry permitted. Types include:

<list>
	<li><b>Password</b>: The entered characters will be masked with asterisks.</li>
	<li><b>Uppercase</b>: Alphabetical characters will automatically be converted to their uppercase equivalents.</li>
	<li><b>Numeric</b>: Only numeric characters can be entered.</li>
	<li><b>Multiline</b>: The text box will support multiple lines of data entry and the Enter key on the keyboard will insert carriage returns, which will be converted to <logiccolor>"\n"</logiccolor> in the returned value.</li>
</list>

The <b>password</b> and <b>multiline</b> options are not compatible so when using one of these options, the other option cannot be used.


<subheader>Return Value</subheader>

The function returns a string value containing the entered value. If the operator canceled without entering a string, the function returns a blank string (even if an initial value was provided).


<subheader>Example 1</subheader>

<logic>
string survey_password = prompt("Enter your password:", password);
</logic>


<subheader>Example 2</subheader>

<logic>
if ROOF_TYPE = 9 then // other (specify)
	ROOF_TYPE_OTHER = prompt("Specify the kind of roof on the dwelling unit:", ROOF_TYPE_OTHER, multiline);
endif;
</logic>


<seealso accept_function.hgt />

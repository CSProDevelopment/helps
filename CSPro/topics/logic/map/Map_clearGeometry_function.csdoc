<title>Map.clearGeometry Function</title>


<subheader>Format</subheader>

<logicsyntax>
b = map_name.clearGeometry();
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor>Map.clearGeometry</logiccolor> function removes all the Geometry currently on the <link Map.csdoc>Map object</link> named <logiccolor>map_name</logiccolor>. Note that this clears only Geometry added using the <logiccolor>Map.addGeometry</logiccolor> function. Markers added to the map using <logiccolor>Map.addMarker</logiccolor> should be cleared using the function <logiccolor>Map.clearMarkers</logiccolor>.


<subheader>Return Value</subheader>

The function returns a logical value of 1 (true).


<subheader>Example</subheader>

<logic>
PROC GLOBAL

function editOutline(Map m, Geometry outline)
    // Remove existing outline
	m.clearGeometry();

	// Edit the outline
	if outline.tracePolygon(m) then
		outline.save("outline.geojson");
	endif;

	// Add modified outline to the map
	m.addGeometry(outline);
end;

PROC MAP_OUTLINE

// Declare a map to draw the outline on
Map m;

// Load the outline from a GeoJSON file
Geometry outline;
outline.load("outline.geojson");

// Add the geometry to the map
m.addGeometry(outline);

// Add a button to allow editing the outline
m.addTextButton("Edit outline", editOutline(m, outline));

// Display the map
m.show();
</logic>


<seealso Map.csdoc Geometry.csdoc Map_addGeometry_function.csdoc Map_removeGeometry_function.csdoc />

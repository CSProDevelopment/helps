<title>Accept Function</title>


<subheader>Format 1</subheader>

<logicsyntax>
i = accept(<arg>heading</arg>, <arg>choice1</arg>『, <arg>choice2</arg>, ... <arg>choiceN</arg>』);
</logicsyntax>

<subheader>Format 2</subheader>

<logicsyntax>
i = accept(<arg>heading</arg>, <arg>choices_list</arg> ‖ <arg>choices_array</arg>);
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor>accept</logiccolor> function displays a menu with a heading and a list of choices. The operator can use the down- or up-arrow keys to select the desired choice and press Enter. The operator can also use the mouse to click on the desired choice.

The <arg>heading</arg> text is a string expression. In the first version of the function, each choice (<arg>choice1</arg> to <arg>choiceN</arg>) is provided as a string expression. In the second version of the function, the choices can be provided using a string <link list.csdoc>List</link> or a string or alphanumeric <link array.csdoc>Array</link>. With an array, the number of choices will be calculated dynamically. Each element of the array will be displayed until a blank string is found in the array.


<subheader>Return Value</subheader>

The function returns the index of the choice selected: 1 for the first choice, 2 for the second choice, etc. The value 0 is returned if the Escape key (or back button) is pressed and none of the choices is selected.


<subheader>Example 1</subheader>

<logic>
numeric manual_choice = accept("Open which manual?", "Supervisor", "Interviewer");

if manual_choice = 1 then
	view("../Manuals/Supervisor.pdf");

elseif manual_choice = 2 then
	view("../Manuals/Interviewer.pdf");

endif;
</logic>


<subheader>Example 2</subheader>

<logic>
List string household_names;

do numeric ctr = 1 while ctr <= count(NAME)
	household_names.add(NAME(ctr));
enddo;

numeric interview_index = accept("Select a Person to Interview", household_names);
</logic>


<seealso prompt_function.csdoc />

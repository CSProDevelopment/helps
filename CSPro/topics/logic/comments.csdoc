<title>Comments</title>

Comments make applications easier to understand. It is highly recommended that CSPro applications be documented through the liberal use of comments.

Within logic, they are used to explain the purpose of specific statements or to temporarily disable statements to help find errors. Within <link message_file_mgf.csdoc>message files</link>, comments can be used to clarify the syntax listed in a message, or identify "ownership" of the message or message blocks (i.e., what code blocks use the messages--global messages or just specific areas?).

<subheader>Comments Within Logic</subheader>

There are two ways to mark text as a comment. The first method is to use the brace symbols. Any text enclosed by braces <logiccolor>{ }</logiccolor> is a comment. As soon as you add the starting brace symbol <logiccolor>{</logiccolor>, ALL subsequent logic will turn green until a closing brace is encountered <font monospace green>}</font>. The braces are useful when wanting to mark several lines of text as a comment, since you only need to mark the start and end of the block; or if you want to embed a comment in the middle of a line of logic, but want the rest of the line to be evaluated.

The second method to mark text as a comment is to use the double slashes <logiccolor>//</logiccolor>. Everything on a line that follows the double slashes is a comment. This is useful when you just want to insert a single line of comment, or a few lines of comments.

Comments can be placed anywhere in your logic. Since they are ignored by the compiler, they will not be checked for syntax errors. Comments can be nested; that is, comments within comments are allowed.

<subheader>Comments Within a Message File</subheader>

While both styles of comments (braces <logiccolor>{ }</logiccolor> and double slashes <logiccolor>//</logiccolor>) are allowed in <link message_file_mgf.csdoc>message files</link>, be aware that when using braces, comments can NOT span over multiple lines. Nor can you embed a comment within a message line or place a comment at the end of a message line. Comments can only appear on a line by itself.

<subheader>Example 1</subheader>

The entire first line is a comment. In line 2, the comment is embedded within the logic. On line 3, the comment trails the logic.

<logic>
PROC HHDAY

1	{ Do not allow June to have more than 30 days }
2	if HHMONTH = 6 {June} and HHDAY > 30 then
3		errmsg(1,"June",30,HHDAY); // if error, then display message
4		reenter;
5	endif;
</logic>

<subheader>Example 2</subheader>

The entire first line is a comment. In line 2, the comment is embedded within the logic. On line 3, the comment trails the logic.

<logic>
PROC GLOBAL

 { This is not necessarily recommended, but comments
   // can be embbed using both styles of comment symbols.
    I can choose to end the multi-line comment I started
    on line 1 whenever desired.

	I have introduced the alias statements as the dictionary
	I was given only used P02, P03, P04, etc., making it very
	easy for me to make a typo and hence, refer to the wrong
	variable and cause a major mistake in my program. }

   alias P02_REL : P02;	// relationship
   alias P03_SEX : P03;
   alias P04_AGE : P04;

   // impute age in our hot deck using sex & relationship
   array HD_P04AGE_SexByRel (P03_VS1(+), P02_VS1(+)) save;
</logic>

<seealso message_file_mgf.csdoc />

<title>Open Function</title>

<subheader>Format</subheader>

<logicsyntax>
b = open(<arg>ext_dict_name</arg> ‖ <arg>file_name</arg>『, update ‖ append ‖ create 』);
</logicsyntax>

<subheader>Description</subheader>

The open function opens and keeps open an external file or file declared in a file statement.

Under most circumstances, neither an open nor a close function is necessary to manipulate the file. In data entry applications, by default, the file is opened when it is operated on with a file function, such as <link loadcase_function.csdoc>loadcase</link>, <link writecase_function.csdoc>writecase</link>, <link fileread_function.csdoc>readfile</link>, or writefile and closed immediately afterward. In batch applications, by default, the file is opened at the beginning of the run and closed at the end.

If you want to control the opening and closing of the file, you can use the open and <link close_function.csdoc>close</link> functions to do this. If you code an open function anywhere is the application logic, then you must control all opening and closing of the file

The <arg>ext_dict_name</arg> or <arg>file_name</arg> must be supplied. Ext_dict_name is the name of a data dictionary defining an external data file. File_name is the name of a file declared in a file statement.

The keywords update, append or create are optional. If no keyword is coded, the file is opened in update mode.

When an <arg>ext_dict_name</arg> is used, if update or append is used, the file is opened, its contents are not changed, and the file is ready to update cases. If create is coded, the file is opened, all previous records are removed and the file is ready to add cases.

When a <arg>file_name</arg> is used, if update is used, the file is opened and you are positioned at the beginning of the file. If append is coded, the file is opened, its contents are not changed, and you are positioned at the end of the file. If create is coded, the file is opened, all previous records are removed and you are positioned at the beginning of the file.

<subheader>Return value</subheader>

The function returns a logical value of <logiccolor>1</logiccolor> (true) if file is opened and <logiccolor>0</logiccolor> (false) otherwise.

<subheader>Example 1</subheader>

<logic>OK = open(LOOKUP_DICT);</logic>

<subheader>Example 2</subheader>

<logic>
PROC GLOBAL
File MyReport;

PROC HOUSEHOLD
OK = open(MyReport, append);
</logic>

<title>Geometry.SetProperty Function</title>


<subheader>Format</subheader>

<logicsyntax geometry>
b = geometry_name.setproperty(<arg>property_name</arg>, <arg>property_value</arg>);
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor geometry>geometry.setProperty</logiccolor> function modifies the value associated with the <link geometry.hgt>geometry</link>'s property specified by the string expression <arg>property_name</arg>. The property will be modified to the value given in the string or numeric expression <arg>property_value</arg>. Properties may not be applied to empty geometry objects so you must first call the <logiccolor geometry>geometry.load</logiccolor>, <logiccolor geometry>geometry.tracePolyon</logiccolor>, or <logiccolor geometry>geometry.walkPolygon</logiccolor> functions to add items to the geometry before setting properties. Property names are case sensitive.

When a geometry item contains multiple features, the property is set to <arg>property_value</arg> in ALL of the features of the geometry. When a geometry item is saved to a GeoJSON file using the <logiccolor geometry>geometry.save</logiccolor> function, the properties are written to the GeoJSON file.

When displaying the geometry on a map, the following properties may be set to change the visual styling of the vector items:

<table 2 header>
	<cell>Name</cell><cell>Value</cell>
	<cell><b>stroke</b></cell><cell>Color used to draw lines and polygon outlines as an HTML color string (e.g. "#FF0000").</cell>
	<cell><b>stroke-width</b></cell><cell>Width of the lines and outlines of polygons in display pixels.</cell>
	<cell><b>fill</b></cell><cell>Color used to draw the interior of polygons as an HTML color string (e.g. "#FF0000").</cell>
</table>


<subheader>Return Value</subheader>

The function returns a logical value of 1 (true) because it will always successfully set a property.


<subheader>Example 1</subheader>

<logic>
// Declare a geometry
geometry outline;
	
// Have the user walk the outline of a polygon
if outline.walkPolygon() then

	// Add the ID items of the case as properties to make it easier to identify when importing into GIS system
	// PROV, DIST and HHNO are the names used in the GIS system
	outline.setProperty("PROV", PROVINCE);
	outline.setProperty("DIST", DISTRICT);
	outline.setProperty("HHNO", HOUSEHOLD_NUMBER);
	
	// Save the outline to a GeoJSON file
	outline.save("outline.geojson");
	
endif;
</logic>


<subheader>Example 2</subheader>

<logic>
// Declare a map
map mymap;

// Load geometry from a file
geometry boundary;
boundary.load("boundary.geojson");

// Set the polygon fill color to purple
boundary.setProperty("fill", "#94219");

// Set the outline color to red
boundary.setProperty("stroke", "#ff0000");

// Set the outline width to 3
boundary.setProperty("stroke-width", 3);

// Add geometry to the map
numeric geometryId = mymap.addGeometry(boundary);

// Show the map
mymap.show();
</logic>


<seealso geometry.hgt geometry_getproperty_function.hgt />

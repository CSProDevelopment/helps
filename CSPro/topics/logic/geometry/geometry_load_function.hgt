<title>Geometry.Load Function</title>

<subheader>Format</subheader>

<logicsyntax geometry>
b = geometry_name.load(<arg>filename</arg>);
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor geometry>geometry.load</logiccolor> function reads the file named <arg>filename</arg> and stores the geometry data contained in the file in a <link geometry.hgt>geometry</link> object. The loaded geometry can then be displayed on a map <logiccolor map>map.addGeometry</logiccolor>. 

CSPro can load geometry from files in <link https://geojson.org>GeoJSON</link> format.

Loading very large GeoJSON files can be slow and may exceed the memory of the mobile device. In some cases it may be neccessary to break up large GeoJSON files into smaller files. For example, rather than using a single file containing geometry for an entire country, create a smaller files for the geometry in each district and then load only the file for the district that the interviewer is currently working in. Alternatively, rather than using geometry you could save the vector data in a custom <link offline_maps.hgt>base map</link>.

<subheader>Return Value</subheader>

The function returns a logical value of 1 (true) if the file was loaded and 0 (false) if the file could not be loaded.


<subheader>Example</subheader>

<logic>
// Declare a map
map mymap;

// Load geometry from a file
geometry boundary;
boundary.load("boundary.geojson");

// Add geometry to the map
mymap.addGeometry(boundary);

// Show the map
mymap.show();
</logic>

<seealso geometry.hgt geometry_save_function.hgt />

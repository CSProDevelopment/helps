<title>EditNote Function</title>
<context logic_help_editnote />

<subheader>Format</subheader>

<logicsyntax>
s = editnote(『<arg>dictionary_symbol_name</arg>』『,<arg>operator_id</arg>』);
</logicsyntax>

<subheader>Description</subheader>

The <logiccolor>editnote</logiccolor> function displays the note entry dialog box for adding or changing the note for a field or other dictionary symbol. You can use this function to force the collection of note text. The operator can always create or edit a note manually by pressing <b>Ctrl+N</b> (on Windows CSEntry) or by clicking on the Notes button on Android and Universal Windows.

If no arguments are supplied, the note for the current field is displayed for editing. The optional argument <arg>dictionary_symbol_name</arg> allows you to edit the note for a dictionary item, record, or level. If using the dictionary name, the case note is edited. Another optional string argument, <arg>operator_id</arg>, allows you to edit the note for a particular <link getoperatorid_function.hgt>operator</link>. If no operator ID is supplied, then the note for the current operator will be edited.

<subheader>Return Value</subheader>

The function returns a string containing the note text. If there is no note, the length of the string will be 0.

<subheader>Example</subheader>

<logic>
PROC COOKING

	if COOKING = 9 then
		COOKING_OTHER = editnote();
	endif;
</logic>
 
<seealso getnote_function.hgt putnote_function.hgt />

<title>Alpha Statement</title>

<i><b>Feature Upgrade:</b> Since CSPro 6.0, you can now use <link string_statement.csdoc>variable-length strings</link>. You are encouraged to use the <logiccolor>string</logiccolor> declaration instead of fixed-width alpha variables whenever possible.</i>


<subheader>Format</subheader>

<logicsyntax>
alpha 『(<arg>length</arg>)』 <arg>var1</arg>『, <arg>var2</arg>, ..., <arg>varN</arg>』;
</logicsyntax>


<subheader>Description</subheader>

The <logiccolor>alpha</logiccolor> statement is used to define alphanumeric variables within an application. The <arg>length</arg> is the number of characters in the variable. The length applies to all variables declared in the same alpha statement. If no length is given, 16 is assigned. The maximum string length that can be declared is 8,192.

If you attempt to assign a string that is longer than the variable's size, the string will be truncated from the right. Conversely, it you assign a string that is shorter than the variable's size, the trailing character positions will be blank-filled.


<subheader>Variable Modifiers</subheader>

The following variable modifiers apply to alphanumeric variables:

<list>
	<li><logiccolor>persistent</logiccolor>: to persist the variable's value from one run of an application to another.</li>
</list>


<subheader>Example 1</subheader>

<logic>
alpha(10) x, y;

x = "hi mom";           // x will equal "hi mom    "
						//               1234567890

x = "good night, mom";	// x will equal "good night"
						//               1234567890
</logic>

<subheader>Example 2</subheader>

<logic>
PROC GLOBAL

alpha (3) reply;
alpha flag;

PROC Q5

if Q5 = 1 then
	reply = "Yes";
	flag = "Y";    			// flag will equal "Y               "
							//                  1234567890123456
else
	reply = "Not Reported"; // reply will equal "Not"
							//                   123
endif;
</logic>

<seealso string_statement.csdoc Array_statement.csdoc numeric_statement.csdoc />

<title>SysParm Function</title>

<subheader>Format</subheader>

<logicsyntax>
s = sysparm(『<arg>parameter_name</arg>』);
</logicsyntax>

<subheader>Description</subheader>

The <logiccolor>sysparm</logiccolor> function returns the value of a parameter provided in a <link run_production_data_entry.csdoc>data entry</link> or <link run_production_batch_edits.csdoc>batch edit</link> PFF file. The function returns the parameter as a left-justified string. If no parameter was given in the PFF file, the function returns a blank string.

If a string expression <arg>parameter_name</arg> is provided, the function looks to see if there is a parameter with the given name specified in the <pffcolor>[Parameters]</pffcolor> section of the PFF file. If such a parameter exists, it is returned as a string. Using this functionality, you can pass several parameters to your programs.

On Windows, it is possible to check for the presence of a command line argument using this function. If <arg>parameter_name</arg> is not in the PFF file, the function will check if that string is specified in the command line and if so, will return a non-blank string.

<subheader>Return Value</subheader>

The function returns a string containing the parameter.

<subheader>Example PFF</subheader>

<pff>
[Parameters]
Parameter=Otter
State=20
County=5
</pff>

<subheader>Example Logic</subheader>

<logic>
errmsg("%s",sysparm());					// displays Otter
STATE = tonumber(sysparm("State"));		// sets STATE to 20
COUNTY = tonumber(sysparm("County"));	// sets COUNTY to 5
</logic>

<seealso Pff_getProperty_function.csdoc />

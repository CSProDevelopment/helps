<title>PostProc Statement</title>
<context logic_help_postproc />

<subheader>Format</subheader>

<logicsyntax>
postproc
</logicsyntax>

<subheader>Description</subheader>

The <logiccolor>postproc</logiccolor> statement declares that the statements following it are executed at the end of a run, case, level, record, form, roster, or field.

In data entry applications, statements in a <logiccolor>postproc</logiccolor> procedure are executed when you <b>complete</b> an object; that is, flow off of it. When you click off a field, manually skip from a field, or move backward, the <logiccolor>postproc</logiccolor> statements are <b>not</b> executed. If you want to execute the statements in these situations, code them in the <logiccolor>killfocus</logiccolor> procedure.

In batch edit applications, a <logiccolor>postproc</logiccolor> is used to execute logic at the end of a run, case, level, or record. For an item there is no difference between placing your logic in a <logiccolor>preproc</logiccolor> or <logiccolor>postproc</logiccolor>.

If you don't code a <logiccolor>preproc</logiccolor> or <logiccolor>postproc</logiccolor> in a <logiccolor>PROC</logiccolor>, all instructions are considered <logiccolor>postproc</logiccolor> statements by default.

<subheader>Example</subheader>

<logic>
PROC MARITAL_STATUS

postproc

if MARITAL_STATUS <> 1 and AGE < 12 then
	errmsg("People aged less than 12 cannot be married.");
	reenter;
endif;
</logic>

<seealso proc_statement.hgt preproc_statement.hgt onfocus_statement.hgt onoccchange_statement.hgt killfocus_statement.hgt order_of_executing_data_entry_events.hgt order_of_executing_batch_edit_events.hgt />

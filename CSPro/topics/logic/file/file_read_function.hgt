<title>File.Read Function</title>

<subheader>Format</subheader>

<logicsyntax>
b = file_handler.read(<arg>string_variable</arg> ‖ <arg>string_list</arg>);
</logicsyntax>

<subheader>Description</subheader>

The <logiccolor file>file.read</logiccolor> function reads one or more lines of text from the <link file.hgt>file</link> associated with <arg>file_handler</arg>. After the read the file pointer is positioned to the next line in the file. This function reads lines sequentially. This function is equivalent to the <logiccolor>fileread</logiccolor> function.

If a <arg>string_variable</arg> is provided as a argument, a single line of text is read and placed in the variable, which is either a temporary <logiccolor>string</logiccolor> variable or an alphanumeric dictionary item. If the dictionary item is longer than the line of text, blanks will be added at the end. If the item is shorter, the line of text will be truncated.

Alternatively, a string <link list.hgt>list</link> can be used as an argument. In this case, all remaining lines in the file are read and stored in <arg>string_list</arg>.

<subheader>Return Value</subheader>

The function returns a logical value of 1 (true) if successful and 0 (false) otherwise.

<subheader>Example</subheader>

<logic>
file occupation_codes_file;

occupation_codes_file.open("Occupation Codes.txt");

// approach 1
string code;

while occupation_codes_file.read(code) do
	// do something with the single code
enddo;

// approach 2
list string all_codes;

occupation_codes_file.read(all_codes);
// do something with all of the codes

occupation_codes_file.close();
</logic>

<seealso file.hgt file_write_function.hgt fileread_function.hgt />

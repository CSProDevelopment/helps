<title>File Object</title>

Most files in CSPro are data files, whose structure is defined by a data dictionary are are used in logic by referring to their dictionary names. However, it is also possible to write to text files without an associated data dictionary. Lines of text can be written to a file or read from a file, and these files can also be used in <logiccolor>export</logiccolor> statements.

The physical name of the file can be specified in the Define File Associations dialog when the application is run, in a <link program_information_file_pff.hgt>PFF file</link>, or by using the <logiccolor file>open</logiccolor> or <logiccolor>setfile</logiccolor> functions.


<subheader>Functionality</subheader>

A file is a CSPro logic object and the following functions can be called via <link object_dot_notation.hgt>dot notation</link>:

<table 2 header nowrap>
	<cell>Function</cell><cell>Description</cell>
	<cell><logiccolor file>open</logiccolor></cell><cell>Associates the file object with an existing or a new file on the disk (equivalent to <logiccolor>setfile</logiccolor>).</cell>
	<cell><logiccolor file>close</logiccolor></cell><cell>Closes the open file (equivalent to <logiccolor>close</logiccolor>).</cell>
	<cell><logiccolor file>read</logiccolor></cell><cell>Reads one or more lines of text from the file (equivalent to <logiccolor>fileread</logiccolor>).</cell>
	<cell><logiccolor file>write</logiccolor></cell><cell>Writes one or more lines of text to a file (equivalent to <logiccolor>filewrite</logiccolor>).</cell>
</table>

In addition to these object functions, files can be used as arguments to functions such as <logiccolor>filecopy</logiccolor>, <logiccolor>filedelete</logiccolor>, <logiccolor>fileempty</logiccolor>, <logiccolor>fileexist</logiccolor>, <logiccolor>filename</logiccolor>, <logiccolor>filerename</logiccolor>, <logiccolor>filesize</logiccolor>, <logiccolor>open</logiccolor>, and <logiccolor>pathname</logiccolor>.


<subheader>Example</subheader>

<logic>
file login_times_file;
login_times_file.open("Login Times.csv", append);
login_times_file.write("%s, %s, %d", getdeviceid(), getoperatorid(), timestamp());
login_times_file.close();
</logic>

<title>Sync Function</title>
<context logic_help_sync />

<i><b>Feature Upgrade</b>: Starting with CSPro 7.0, you should no longer use this function as it will soon be removed from CSPro. To replicate the behavior of the function, you must use: <logiccolor>syncconnect</logiccolor>, <logiccolor>syncfile</logiccolor>, and <logiccolor>syncdisconnect</logiccolor>.</i>

<subheader>Format</subheader>

<logicsyntax>
b = sync(<arg>pnc_filename</arg>『,<arg>queue</arg>』);
</logicsyntax>

<subheader>Description</subheader>

The <logiccolor>sync</logiccolor> function launches a <link data_synchronization.hgt>data synchronization script</link> on Android devices. These scripts can transfer data with FTP servers, Dropbox accounts, or other Android devices via Bluetooth. By executing a synchronization script in logic, you can create a dynamic operational control system for your survey operation. (Syncs can also be executed manually.)

The <arg>pnc_filename</arg> argumnet is a string expression pointing to the file name of the <link data_synchronization.hgt>.pnc file</link> script. The file can exist anywhere on the Android device. If it is not found at the path provided, CSEntry will check if a file with the given name exists in the CSEntry sandbox. Using this sandbox functionality, you can execute synchronization files that have been downloaded via the <b>New Synchronization</b> menus in CSEntry.

An optional argument, <arg>queue</arg>, indicates that this synchronization script should not be executed immediately, but instead should be executed when the data entry application has closed. This can be useful if you want to synchronize files that may be open in your data entry application. (It is not possible to sync files that are currently open because they are locked and inaccessible to the synchronization system.)

<subheader>Return Value</subheader>

The function returns a logical value of 1 (true) if the synchronization (or the queueing of the file) was successful and 0 (false) if not.

<subheader>Example 1</subheader>

<logic>
PROC SURVEY_FF

preproc

	// at the beginning of the program, queue up the synchronization script for
	// execution when the program ends
	sync("Send Data to FTP Server.pnc",queue);
</logic>

<subheader>Example 2</subheader>

<logic>
PROC GLOBAL

file pncFile;

PROC EXAMPLE

	// close the external dictionary file so that it can be read by the synchronization script
	close(EXTERNAL_DICT);

	setfile(pncFile,"External Dictionary Sync.pnc",create);

	filewrite(pncFile,"[SyncFile]");
	filewrite(pncFile,"Version=CSPro <definition version />");
	filewrite(pncFile,"RootFolder=/");

	filewrite(pncFile,"[Connection]");
	filewrite(pncFile,"Type=FTP");
	filewrite(pncFile,"Host=ftp://www.csprousers.org");
	filewrite(pncFile,"Username=bituminous");
	filewrite(pncFile,"Password=coal");

	filewrite(pncFile,"[Sync]");
	filewrite(pncFile,"ServerPath=/Data");
	filewrite(pncFile,"Put=%s",filename(EXTERNAL_DICT));

	close(pncFile);

	if sync(filename(pncFile)) then
		errmsg("The sync was successful!");
	endif;

	open(EXTERNAL_DICT); // reopen the external dictionary file
</logic>

<seealso data_synchronization.hgt />

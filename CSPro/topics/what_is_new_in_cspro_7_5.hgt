<title>What's New in CSPro 7.5?</title>

This is a detailed list of changes in CSPro 7.5. For a more general overview, see the <i>readme.txt</i> file located in the CSPro installation folder.


<subheader>General</subheader>

<list>
	<li>On Android devices it is possible to <link audio_record_function.hgt>record</link> and <link audio_play_function.hgt>play</link> audio in two modes: <link audio_recordinteractive_function.hgt>interactive mode</link>, with the enumerator able to control the recording; and <link audio_record_function.hgt>background mode</link>, with the recording controlled by logic functions using the new <logiccolor>audio</logiccolor> object.</li>
	<li><link listing_file.hgt>Listing files</link> can now be written as comma-separated values (CSV) or CSPro data files. Traditional listing files in text format are still supported.</li>
</list>


<subheader>Android</subheader>

<list>
	<li>The <i>csentry</i> directory on Android has moved. For new installations the <i>csentry</i> directory will be located at:<indent><b>&lt;external storage&gt;/Android/data/gov.census.cspro.csentry/files/csentry</b></indent> ~!~If you are upgrading from an earlier version of CSEntry, the <i>csentry</i> directory will remain at:<indent><b>&lt;external storage&gt;/csentry</b></indent> ~!~This change is required to support the more stringent security requirements introduced in the latest versions of Android.</li>
</list>


<subheader>Logic</subheader>

<list>
	<li>A new object, <link audio.hgt>audio</link>, that allows for recording or playing audio. It has the functions: <logiccolor audio>clear</logiccolor>, <logiccolor audio>concat</logiccolor>, <logiccolor audio>length</logiccolor>, <logiccolor audio>load</logiccolor>, <logiccolor audio>play</logiccolor>, <logiccolor audio>record</logiccolor>, <logiccolor audio>recordInteractive</logiccolor>, <logiccolor audio>save</logiccolor>, and <logiccolor audio>stop</logiccolor>.</li>
	<li>A new object, <link hashmap.hgt>hashmap</link>, that facilitates storage of numbers or strings in an associative array. It has the functions: <logiccolor hashmap>clear</logiccolor>, <logiccolor hashmap>contains</logiccolor>, <logiccolor hashmap>getKeys</logiccolor>, <logiccolor hashmap>length</logiccolor>, and <logiccolor hashmap>remove</logiccolor>.</li>
	<li>A new function, <logiccolor>syncparadata</logiccolor>, similar in behavior to <logiccolor>syncdata</logiccolor>, allows for the syncing of paradata between devices over Bluetooth, or between a device and a CSWeb, Dropbox, or FTP server.</li>
	<li>A new function, <logiccolor>replace</logiccolor>, returns a string with one of more instances of a substring replaced with new text.</li>
	<li>A new function, <logiccolor>encode</logiccolor>, escapes special characters to facilitate writing to HTML or CSV files, or encodes characters when writing out URIs or URI components.</li>
	<li>A new namespace, <link path.hgt>path</link>, has functions for interacting with file paths: <logiccolor>path.concat</logiccolor>, <logiccolor>path.getDirectoryName</logiccolor>, <logiccolor>path.getExtension</logiccolor>, <logiccolor>path.getFileName</logiccolor>, and <logiccolor>path.getFileNameWithoutExtension</logiccolor>.</li>
	<li><link function_statement.hgt>User-defined functions</link> now support <link function_parameters_optional.hgt>optional parameters</link> as well as passing numeric and string values <link function_arguments_ref.hgt>by reference</link>.</li>
	<li>Conditional compilation of logic is now possible due to the addition of a <link preprocessor.hgt>logic preprocessor</link>.</li>
	<li>New functions for <link list.hgt>list</link> objects: <logiccolor>list.removeDuplicates</logiccolor> removes duplicate values; <logiccolor>list.removeIn</logiccolor> removes values specified in an <link in_operator.hgt>in list</link>; and <logiccolor>list.sort</logiccolor> sorts a list.</li>
	<li>The <logiccolor>list.show</logiccolor> and <logiccolor>valueset.show</logiccolor> functions work with string lists and string value sets.</li>
	<li>The <logiccolor>valueset.randomize</logiccolor> function is a new way to randomize value sets (which previously could be done using <logiccolor>randomizevs</logiccolor>). These value set randomizations now obey any seed value provided using the <logiccolor>seed</logiccolor> function.</li>
	<li>The <logiccolor>valueset.sort</logiccolor> function sorts the order of entries in the value set by either label or code.</li>
	<li>The <logiccolor>randomin</logiccolor> function now accepts non-integer values in the input <link in_operator.hgt>in list</link>.</li>
	<li>New numeric and string variables can be declared inline in the <logiccolor>recode</logiccolor> statement's destination variables section.</li>
	<li>A new callback function, <logiccolor>OnSystemMessage</logiccolor>, provides a way to override the displaying of system error messages.</li>
	<li>It is possible to check a value against all <link special_values.hgt>special values</link> using the code <logiccolor>special</logiccolor> in an <link in_operator.hgt>in list</link> (which are also used by <logiccolor>recode</logiccolor> and <logiccolor>when</logiccolor> statements).</li>
	<li><link list.hgt>Lists</link> can also be used as inputs of an <link in_operator.hgt>in list</link>.</li>
	<li>The <logiccolor>loadsetting</logiccolor> and <logiccolor>savesetting</logiccolor> functions accepts numeric values as part of the attribute-value pair.</li>
	<li>The <logiccolor>hash</logiccolor> function accepts numeric values as inputs.</li>
</list>


<subheader>Tools</subheader>

<list>
	<li>The Deploy Application tool has options to refresh all files or all data entry applications within a folder.</li>
</list>


<subheader>CSWeb</subheader>

<list>
	<li>CSWeb can convert case data to MySQL/MariaDB relational tables using a <link CSWeb::data_settings.hgt>command line process</link>, allowing for more dynamic reporting.</li>
</list>


<seealso what_is_new_in_cspro.hgt />

<title>User and Configuration Settings</title>
<context HIDD_EDT_COMMON_STORE HID_VIEW_COMMONSTORE />

With a data entry or batch edit application active, select <b>View</b> -> <b>User and Configuration Settings</b>. A dialog box will open that lets you add, modify, or delete user and configuration settings. These settings are attribute-value pairs that are alternate ways to store information (rather than using external dictionaries, working storage dictionaries, or text files). A setting, the "value," is stored in a way that can be looked up using an "attribute" key. Both the value and attribute are strings.

<subheader>User Settings</subheader>

User settings are accessed from logic with the <logiccolor>loadsetting</logiccolor> function and are modified using the <logiccolor>savesetting</logiccolor> function. Unless otherwise specified, all CSPro applications on a device share the same settings, which make user settings a convenient way to share information across different applications. For example, a menu program might save some information:

<logic>
PROC INTERVIEWER_NAME

	savesetting("InterviewerName",INTERVIEWER_NAME);
</logic>

And then another program might automatically fill in the interviewer name based on the saved setting:

<logic>
PROC INTERVIEWER

preproc

	INTERVIEWER = loadsetting("InterviewerName");
	noinput;
</logic>

<subheader>Configuration Settings</subheader>

Configuration settings are stored locally on your device and are loaded at compile time. The value of a configuration setting is accessible by declaring a string variable using the <logiccolor>config</logiccolor> type. Unlike user settings, configuration settings cannot be modified in logic. They can only be modified using the dialog box.

Because <link binary_data_entry_application_file_pen.hgt>binary data entry applications (.pen files)</link> are only compiled with the .pen file is created, the configuration settings stored on the computer used to create the file are saved in the .pen file.

Configuration settings are a convenient way to store some information outside of your <link logic_file_apc.hgt>logic file</link>. If you are using a revision control system (e.g., git), there may be some values, like the URL you are using to synchronize data, that you do not want to store in your publicly visible logic. You can define these settings on your machine without having to share them with strangers. For example, this is logic that you can safely commit to GitHub:

<logic>
PROC GLOBAL

config ftpServer;

PROC EXAMPLE

	syncconnect(FTP,ftpServer);
</logic>

For this to work, you need to use the dialog box to add an attribute <b>ftpServer</b> with its value being the FTP server URL.

<seealso config_statement.hgt loadsetting_function.hgt savesetting_function.hgt />

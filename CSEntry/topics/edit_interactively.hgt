<title>Edit Interactively</title>
<context HID_INTEDIT HID_INTEDITOPTIONS HIDD_INTEDTDLG />

<font white>HELPTODO</font>

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
 <meta name="generator" content="Adobe RoboHelp 11">

<style type="text/css">
<!--
body { background-color:#ffffff; }
-->
</style>


<style title="hcp" type="text/css">
<!--
p.hcp1 { text-align:left;
margin-top:0.00pt;
margin-bottom:0.00pt; }
font.hcp2 { font-family:Arial;
font-size:10pt; }
p.hcp3 { margin-top:0.00pt;
margin-bottom:0.00pt;
margin-left:48px;
text-indent:-48px; }
font.hcp4 { font-family:Arial;
font-size:10pt;
font-weight:bold; }
-->
</style>
</head>
<body style="font-family: Arial; font-size: 10pt; background-color: #ffffff;">

<h3 style="text-align: left; font-size: 12pt; margin-top: 6.00pt; margin-bottom: 2.00pt;"><b><font style="font-family: Arial; font-size: 18pt; font-weight: bold;" face="Arial" size="5">Edit Interactively</font></b></h3>
<p class="hcp1">&#160;</p>
<p class="hcp1"><font color="#000000" face="Arial" size="2" class="hcp2">You can search through the data file using your data entry logic to find errors or unexpected conditions and display the data entry form containing each error ready for modification. This is a very convenient way to make corrections to survey data, provided the data volume is not too large, and the operator is knowledgeable enough to make the necessary corrections.</font></p>
<p class="hcp1">&#160;</p>
<p class="hcp1"><font color="#000000" face="Arial" size="2" class="hcp2">Interactive editing is performed after the data have already been entered. You can use the same programmed logic that was in effect during data entry to find problems that were left unresolved by the original keyer, or you can use different logic to check for other conditions.</font></p>
<p class="hcp1">&#160;</p>
<p class="hcp1"><font color="#000000" face="Arial" size="2" class="hcp2">To perform interactive editing:</font></p>
<ol style="list-style: decimal;">
<li class="p">
<p class="hcp3"><font color="#000000" face="Arial" size="2" class="hcp2">Open the data file, using the data entry application that contains the logic you want to check.</font></p>
</li>
<li class="p">
<p class="hcp3"><font color="#000000" face="Arial" size="2" class="hcp2">Go to Modify mode, starting on the first case you wish to check (usually the first case in the data file).</font></p>
</li>
<li class="p">
<p class="hcp3"><font color="#000000" face="Arial" size="2" class="hcp2">From the</font> <b><font color="#000000" face="Arial" size="2" class="hcp4">Edit</font></b> <font color="#000000" face="Arial" size="2" class="hcp2">menu, select</font> <b><font color="#000000" face="Arial" size="2" class="hcp4">Interactive Edit</font></b><font color="#000000" face="Arial" size="2" class="hcp2">; or press</font> <b><font color="#000000" face="Arial" size="2" class="hcp4">F11</font></b><font color="#000000" face="Arial" size="2" class="hcp2">.</font></p>
</li>
<li class="p">
<p class="hcp3"><font color="#000000" face="Arial" size="2" class="hcp2">Select whether to stop on messages, out of range conditions, or both.</font></p>
</li>
</ol>
<p class="hcp1"><font color="#000000" face="Arial" size="2" class="hcp2">CSEntry will advance from wherever the cursor is currently positioned, field by field, from the current case through the end of the data file, executing whatever procedures are included in the application’s logic. If you have chosen to stop on messages, CSEntry will stop whenever the application logic hits an "errmsg" command. If you have chosen to stop on out of range, CSEntry will stop whenever a field value is other than what is defined in it’s first value set in the dictionary. (If there are no value sets for a given field, it will never be considered out of range.) When CSEntry stops, it shows the programmed or out or range message, then places you on the appropriate form. You can make changes to the data if you like, and press F11 to continue through the data file.</font></p>
</body>
</html>
